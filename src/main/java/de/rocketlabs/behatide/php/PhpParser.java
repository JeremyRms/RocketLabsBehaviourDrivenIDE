/* PhpParser.java */
/* Generated By:JavaCC: Do not edit this line. PhpParser.java */
package de.rocketlabs.behatide.php;

import de.rocketlabs.behatide.php.model.*;

import java.io.InputStream;
import java.util.LinkedList;
import java.util.List;

public final class PhpParser implements PhpParserConstants {

    public static PhpFile parse(InputStream stream) throws ParseException {
        PhpParser parser = new PhpParser(stream);
        parser.token_source.SwitchTo(HTML_STATE);
        return parser.PhpFile();
    }

    private List add(List list, Object obj) {
        if (list == null) {
            list = new LinkedList();
        }
        list.add(obj);
        return list;
    }

    /*********************************
     * Start of PHP Language Grammar *
     *********************************/
    final public PhpFile PhpFile() throws ParseException {
        String namespace = "";
        PhpClass cd = null;
        List classes = null;
        List methods = null;
        switch ((jj_ntk == -1) ? jj_ntk_f() : jj_ntk) {
            case PHP_BEGIN: {
                jj_consume_token(PHP_BEGIN);
                switch ((jj_ntk == -1) ? jj_ntk_f() : jj_ntk) {
                    case SLASH_STAR_COMMENT: {
                        jj_consume_token(SLASH_STAR_COMMENT);
                        break;
                    }
                    default:
                        jj_la1[0] = jj_gen;
                        ;
                }
                if (jj_2_1(2147483647)) {
                    namespace = NamespaceDeclaration();
                } else {
                    ;
                }
                switch ((jj_ntk == -1) ? jj_ntk_f() : jj_ntk) {
                    case SLASH_STAR_COMMENT: {
                        jj_consume_token(SLASH_STAR_COMMENT);
                        break;
                    }
                    default:
                        jj_la1[1] = jj_gen;
                        ;
                }
                label_1:
                while (true) {
                    switch ((jj_ntk == -1) ? jj_ntk_f() : jj_ntk) {
                        case SLASH_STAR_COMMENT:
                        case USE: {
                            ;
                            break;
                        }
                        default:
                            jj_la1[2] = jj_gen;
                            break label_1;
                    }
                    switch ((jj_ntk == -1) ? jj_ntk_f() : jj_ntk) {
                        case USE: {
                            UseStatement();
                            break;
                        }
                        case SLASH_STAR_COMMENT: {
                            jj_consume_token(SLASH_STAR_COMMENT);
                            break;
                        }
                        default:
                            jj_la1[3] = jj_gen;
                            jj_consume_token(-1);
                            throw new ParseException();
                    }
                }
                label_2:
                while (true) {
                    if (jj_2_2(2147483647)) {
                        ;
                    } else {
                        break label_2;
                    }
                    cd = ClassDeclaration();
                    classes = add(classes, cd);
                }
                switch ((jj_ntk == -1) ? jj_ntk_f() : jj_ntk) {
                    case 0: {
                        jj_consume_token(0);
                        break;
                    }
                    case 109: {
                        jj_consume_token(109);
                        break;
                    }
                    default:
                        jj_la1[4] = jj_gen;
                        jj_consume_token(-1);
                        throw new ParseException();
                }
                break;
            }
            case 0: {
                jj_consume_token(0);
                break;
            }
            default:
                jj_la1[5] = jj_gen;
                jj_consume_token(-1);
                throw new ParseException();
        }
        {
            if ("" != null) return new PhpFile(namespace, classes);
        }
        throw new Error("Missing return statement in function");
    }

    final public String NamespaceDeclaration() throws ParseException {
        String namespace = null;
        jj_consume_token(NAMESPACE);
        namespace = ClassPath();
        EndOfStatement();
        {
            if ("" != null) return namespace;
        }
        throw new Error("Missing return statement in function");
    }

    final public String ClassPath() throws ParseException {
        String ret;
        jj_consume_token(FQCN);
        ret = token.image;
        {
            if ("" != null) return ret;
        }
        throw new Error("Missing return statement in function");
    }

    final public PhpClass ClassDeclaration() throws ParseException {
        String className = null;
        List classMembers = null;
        switch ((jj_ntk == -1) ? jj_ntk_f() : jj_ntk) {
            case ABSTRACT:
            case FINAL: {
                switch ((jj_ntk == -1) ? jj_ntk_f() : jj_ntk) {
                    case ABSTRACT: {
                        jj_consume_token(ABSTRACT);
                        break;
                    }
                    case FINAL: {
                        jj_consume_token(FINAL);
                        break;
                    }
                    default:
                        jj_la1[6] = jj_gen;
                        jj_consume_token(-1);
                        throw new ParseException();
                }
                break;
            }
            default:
                jj_la1[7] = jj_gen;
                ;
        }
        jj_consume_token(CLASS);
        jj_consume_token(IDENTIFIER);
        className = token.image;
        switch ((jj_ntk == -1) ? jj_ntk_f() : jj_ntk) {
            case EXTENDS: {
                jj_consume_token(EXTENDS);
                jj_consume_token(IDENTIFIER);
                break;
            }
            default:
                jj_la1[8] = jj_gen;
                ;
        }
        switch ((jj_ntk == -1) ? jj_ntk_f() : jj_ntk) {
            case IMPLEMENTS: {
                jj_consume_token(IMPLEMENTS);
                jj_consume_token(IDENTIFIER);
                label_3:
                while (true) {
                    switch ((jj_ntk == -1) ? jj_ntk_f() : jj_ntk) {
                        case 110: {
                            ;
                            break;
                        }
                        default:
                            jj_la1[9] = jj_gen;
                            break label_3;
                    }
                    jj_consume_token(110);
                    jj_consume_token(IDENTIFIER);
                }
                break;
            }
            default:
                jj_la1[10] = jj_gen;
                ;
        }
        classMembers = ClassMembers();
        {
            if ("" != null) return new PhpClass(className, classMembers);
        }
        throw new Error("Missing return statement in function");
    }

    final public void EndOfStatement() throws ParseException {
        switch ((jj_ntk == -1) ? jj_ntk_f() : jj_ntk) {
            case SEMICOLON: {
                jj_consume_token(SEMICOLON);
                break;
            }
            case PHP_END: {
                EmbeddedHtml();
                break;
            }
            default:
                jj_la1[11] = jj_gen;
                jj_consume_token(-1);
                throw new ParseException();
        }
    }

    final public void EmbeddedHtml() throws ParseException {
        jj_consume_token(PHP_END);
        label_4:
        while (true) {
            switch ((jj_ntk == -1) ? jj_ntk_f() : jj_ntk) {
                case HTML_OTHER:
                case HTML: {
                    ;
                    break;
                }
                default:
                    jj_la1[12] = jj_gen;
                    break label_4;
            }
            switch ((jj_ntk == -1) ? jj_ntk_f() : jj_ntk) {
                case HTML: {
                    jj_consume_token(HTML);
                    break;
                }
                case HTML_OTHER: {
                    jj_consume_token(HTML_OTHER);
                    break;
                }
                default:
                    jj_la1[13] = jj_gen;
                    jj_consume_token(-1);
                    throw new ParseException();
            }
        }
        switch ((jj_ntk == -1) ? jj_ntk_f() : jj_ntk) {
            case PHP_BEGIN: {
                jj_consume_token(PHP_BEGIN);
                break;
            }
            case 0: {
                jj_consume_token(0);
                break;
            }
            default:
                jj_la1[14] = jj_gen;
                jj_consume_token(-1);
                throw new ParseException();
        }
    }

    final public void UseStatement() throws ParseException {
        jj_consume_token(USE);
        switch ((jj_ntk == -1) ? jj_ntk_f() : jj_ntk) {
            case IDENTIFIER: {
                jj_consume_token(IDENTIFIER);
                break;
            }
            case FQCN: {
                jj_consume_token(FQCN);
                break;
            }
            default:
                jj_la1[15] = jj_gen;
                jj_consume_token(-1);
                throw new ParseException();
        }
        switch ((jj_ntk == -1) ? jj_ntk_f() : jj_ntk) {
            case AS: {
                jj_consume_token(AS);
                jj_consume_token(IDENTIFIER);
                break;
            }
            default:
                jj_la1[16] = jj_gen;
                ;
        }
        EndOfStatement();
    }

    final public List ClassMembers() throws ParseException {
        List classMembers = null;
        PhpFunction cm = null;
        jj_consume_token(111);
        label_5:
        while (true) {
            switch ((jj_ntk == -1) ? jj_ntk_f() : jj_ntk) {
                case SLASH_STAR_COMMENT:
                case FUNCTION:
                case VAR:
                case PUBLIC:
                case PRIVATE:
                case PROTECTED:
                case ABSTRACT:
                case FINAL:
                case STATIC:
                case CONST:
                case GLOBAL:
                case DOLLAR: {
                    ;
                    break;
                }
                default:
                    jj_la1[17] = jj_gen;
                    break label_5;
            }
            cm = MemberDeclaration();
            if (cm != null) {
                classMembers = add(classMembers, cm);
            }
        }
        jj_consume_token(112);
        {
            if ("" != null) return classMembers;
        }
        throw new Error("Missing return statement in function");
    }

    final public PhpFunction MemberDeclaration() throws ParseException {
        PhpFunction cm = null;
        if (jj_2_3(2147483647)) {
            cm = FunctionDeclaration();
        } else if (jj_2_4(2147483647)) {
            switch ((jj_ntk == -1) ? jj_ntk_f() : jj_ntk) {
                case PUBLIC:
                case PRIVATE:
                case PROTECTED: {
                    Visibility();
                    break;
                }
                default:
                    jj_la1[18] = jj_gen;
                    ;
            }
            jj_consume_token(CONST);
            jj_consume_token(IDENTIFIER);
            jj_consume_token(113);
            Expression();
            EndOfStatement();
        } else {
            switch ((jj_ntk == -1) ? jj_ntk_f() : jj_ntk) {
                case VAR:
                case PUBLIC:
                case PRIVATE:
                case PROTECTED:
                case STATIC:
                case DOLLAR: {
                    label_6:
                    while (true) {
                        switch ((jj_ntk == -1) ? jj_ntk_f() : jj_ntk) {
                            case VAR:
                            case PUBLIC:
                            case PRIVATE:
                            case PROTECTED:
                            case STATIC: {
                                ;
                                break;
                            }
                            default:
                                jj_la1[19] = jj_gen;
                                break label_6;
                        }
                        switch ((jj_ntk == -1) ? jj_ntk_f() : jj_ntk) {
                            case VAR: {
                                jj_consume_token(VAR);
                                break;
                            }
                            case PUBLIC:
                            case PRIVATE:
                            case PROTECTED: {
                                Visibility();
                                break;
                            }
                            case STATIC: {
                                jj_consume_token(STATIC);
                                break;
                            }
                            default:
                                jj_la1[20] = jj_gen;
                                jj_consume_token(-1);
                                throw new ParseException();
                        }
                    }
                    jj_consume_token(DOLLAR);
                    jj_consume_token(VAR_NAME);
                    switch ((jj_ntk == -1) ? jj_ntk_f() : jj_ntk) {
                        case 113: {
                            jj_consume_token(113);
                            Expression();
                            break;
                        }
                        default:
                            jj_la1[21] = jj_gen;
                            ;
                    }
                    label_7:
                    while (true) {
                        switch ((jj_ntk == -1) ? jj_ntk_f() : jj_ntk) {
                            case 110: {
                                ;
                                break;
                            }
                            default:
                                jj_la1[22] = jj_gen;
                                break label_7;
                        }
                        jj_consume_token(110);
                        jj_consume_token(DOLLAR);
                        jj_consume_token(VAR_NAME);
                        switch ((jj_ntk == -1) ? jj_ntk_f() : jj_ntk) {
                            case 113: {
                                jj_consume_token(113);
                                Expression();
                                break;
                            }
                            default:
                                jj_la1[23] = jj_gen;
                                ;
                        }
                    }
                    EndOfStatement();
                    break;
                }
                case GLOBAL: {
                    jj_consume_token(GLOBAL);
                    Variable();
                    label_8:
                    while (true) {
                        switch ((jj_ntk == -1) ? jj_ntk_f() : jj_ntk) {
                            case 110: {
                                ;
                                break;
                            }
                            default:
                                jj_la1[24] = jj_gen;
                                break label_8;
                        }
                        jj_consume_token(110);
                        Variable();
                    }
                    EndOfStatement();
                    break;
                }
                case ABSTRACT: {
                    jj_consume_token(ABSTRACT);
                    switch ((jj_ntk == -1) ? jj_ntk_f() : jj_ntk) {
                        case PUBLIC:
                        case PRIVATE:
                        case PROTECTED: {
                            Visibility();
                            break;
                        }
                        default:
                            jj_la1[25] = jj_gen;
                            ;
                    }
                    switch ((jj_ntk == -1) ? jj_ntk_f() : jj_ntk) {
                        case STATIC: {
                            jj_consume_token(STATIC);
                            break;
                        }
                        default:
                            jj_la1[26] = jj_gen;
                            ;
                    }
                    jj_consume_token(FUNCTION);
                    switch ((jj_ntk == -1) ? jj_ntk_f() : jj_ntk) {
                        case 114: {
                            jj_consume_token(114);
                            break;
                        }
                        default:
                            jj_la1[27] = jj_gen;
                            ;
                    }
                    jj_consume_token(IDENTIFIER);
                    jj_consume_token(115);
                    switch ((jj_ntk == -1) ? jj_ntk_f() : jj_ntk) {
                        case ARRAY:
                        case DOLLAR:
                        case IDENTIFIER:
                        case 114: {
                            ParameterList();
                            break;
                        }
                        default:
                            jj_la1[28] = jj_gen;
                            ;
                    }
                    jj_consume_token(116);
                    EndOfStatement();
                    break;
                }
                case SLASH_STAR_COMMENT: {
                    jj_consume_token(SLASH_STAR_COMMENT);
                    break;
                }
                default:
                    jj_la1[29] = jj_gen;
                    jj_consume_token(-1);
                    throw new ParseException();
            }
        }
        {
            if ("" != null) return cm;
        }
        throw new Error("Missing return statement in function");
    }

    final public PhpFunction FunctionDeclaration() throws ParseException {
        String name = null;
        String docBlock = null;
        switch ((jj_ntk == -1) ? jj_ntk_f() : jj_ntk) {
            case SLASH_STAR_COMMENT: {
                jj_consume_token(SLASH_STAR_COMMENT);
                docBlock = token.image;
                break;
            }
            default:
                jj_la1[30] = jj_gen;
                ;
        }
        label_9:
        while (true) {
            switch ((jj_ntk == -1) ? jj_ntk_f() : jj_ntk) {
                case PUBLIC:
                case PRIVATE:
                case PROTECTED:
                case FINAL:
                case STATIC: {
                    ;
                    break;
                }
                default:
                    jj_la1[31] = jj_gen;
                    break label_9;
            }
            switch ((jj_ntk == -1) ? jj_ntk_f() : jj_ntk) {
                case FINAL: {
                    jj_consume_token(FINAL);
                    break;
                }
                case PUBLIC:
                case PRIVATE:
                case PROTECTED: {
                    Visibility();
                    break;
                }
                case STATIC: {
                    jj_consume_token(STATIC);
                    break;
                }
                default:
                    jj_la1[32] = jj_gen;
                    jj_consume_token(-1);
                    throw new ParseException();
            }
        }
        jj_consume_token(FUNCTION);
        switch ((jj_ntk == -1) ? jj_ntk_f() : jj_ntk) {
            case 114: {
                jj_consume_token(114);
                break;
            }
            default:
                jj_la1[33] = jj_gen;
                ;
        }
        jj_consume_token(IDENTIFIER);
        name = token.image;
        jj_consume_token(115);
        switch ((jj_ntk == -1) ? jj_ntk_f() : jj_ntk) {
            case ARRAY:
            case DOLLAR:
            case IDENTIFIER:
            case 114: {
                ParameterList();
                break;
            }
            default:
                jj_la1[34] = jj_gen;
                ;
        }
        jj_consume_token(116);
        CompoundStatement();
        {
            if ("" != null) return new PhpFunction(name, parseDocBlock(docBlock));
        }
        throw new Error("Missing return statement in function");
    }

    final public PhpDocBlock parseDocBlock(String docBlock) throws ParseException {
        if (docBlock == null) {
            {
                if ("" != null) return null;
            }
        }
        try {
            java.io.BufferedReader reader = new java.io.BufferedReader(new java.io.StringReader(docBlock));
            //Skip first line
            reader.readLine();
            String line;
            String description = "";
            String tagName = null;
            String tagDescription = null;
            List<PhpDocBlockTag> tags = new LinkedList();
            while ((line = reader.readLine()) != null) {
                line = line.replaceAll("^[ */]*", "");
                line = line.replaceAll("[ */]*$", "");
                if (line.startsWith("@")) {
                    if (tagName != null) {
                        tags.add(new PhpDocBlockTag(tagName, tagDescription));
                    }
                    tagName = line.substring(1, line.indexOf(' '));
                    line = line.substring(line.indexOf(tagName) + tagName.length() + 1);
                    tagDescription = "";
                }
                if (tagName == null) {
                    description += line;
                } else {
                    tagDescription += line;
                }
            }
            {
                if ("" != null) return new PhpDocBlock(description, tags);
            }
        } catch (Exception e) {
            {
                if (true) throw new ParseException(e.getMessage());
            }
        }
        throw new Error("Missing return statement in function");
    }

    final public void Visibility() throws ParseException {
        switch ((jj_ntk == -1) ? jj_ntk_f() : jj_ntk) {
            case PUBLIC: {
                jj_consume_token(PUBLIC);
                break;
            }
            case PRIVATE: {
                jj_consume_token(PRIVATE);
                break;
            }
            case PROTECTED: {
                jj_consume_token(PROTECTED);
                break;
            }
            default:
                jj_la1[35] = jj_gen;
                jj_consume_token(-1);
                throw new ParseException();
        }
    }

    final public void Variable() throws ParseException {
        jj_consume_token(DOLLAR);
        label_10:
        while (true) {
            switch ((jj_ntk == -1) ? jj_ntk_f() : jj_ntk) {
                case DOLLAR1: {
                    ;
                    break;
                }
                default:
                    jj_la1[36] = jj_gen;
                    break label_10;
            }
            jj_consume_token(DOLLAR1);
        }
        jj_consume_token(VAR_NAME);
    }

    final public void ParameterList() throws ParseException {
        Parameter();
        label_11:
        while (true) {
            if (jj_2_5(2)) {
                ;
            } else {
                break label_11;
            }
            jj_consume_token(110);
            Parameter();
        }
    }

    final public void Parameter() throws ParseException {
        switch ((jj_ntk == -1) ? jj_ntk_f() : jj_ntk) {
            case ARRAY:
            case IDENTIFIER: {
                switch ((jj_ntk == -1) ? jj_ntk_f() : jj_ntk) {
                    case IDENTIFIER: {
                        jj_consume_token(IDENTIFIER);
                        break;
                    }
                    case ARRAY: {
                        jj_consume_token(ARRAY);
                        break;
                    }
                    default:
                        jj_la1[37] = jj_gen;
                        jj_consume_token(-1);
                        throw new ParseException();
                }
                break;
            }
            default:
                jj_la1[38] = jj_gen;
                ;
        }
        switch ((jj_ntk == -1) ? jj_ntk_f() : jj_ntk) {
            case 114: {
                jj_consume_token(114);
                break;
            }
            default:
                jj_la1[39] = jj_gen;
                ;
        }
        Variable();
        switch ((jj_ntk == -1) ? jj_ntk_f() : jj_ntk) {
            case 113: {
                jj_consume_token(113);
                Expression();
                break;
            }
            default:
                jj_la1[40] = jj_gen;
                ;
        }
    }

    final public void CompoundStatement() throws ParseException {
        jj_consume_token(111);
        label_12:
        while (true) {
            switch ((jj_ntk == -1) ? jj_ntk_f() : jj_ntk) {
                case SLASH_STAR_COMMENT:
                case INTEGER_LITERAL:
                case FLOATING_POINT_LITERAL:
                case DOUBLE_STRING_LITERAL_START:
                case SINGLE_STRING_LITERAL_START:
                case HEREDOC_START:
                case REQUIRE_ONCE:
                case REQUIRE:
                case INCLUDE_ONCE:
                case INCLUDE:
                case NAMESPACE:
                case USE:
                case DEFINE:
                case ECHO:
                case PRINT:
                case SWITCH:
                case CASE:
                case DFLT:
                case BREAK:
                case RETURN:
                case DO:
                case WHILE:
                case FOREACH:
                case FOR:
                case CONTINUE:
                case IF:
                case FUNCTION:
                case CLASS:
                case VAR:
                case PUBLIC:
                case PRIVATE:
                case PROTECTED:
                case ABSTRACT:
                case FINAL:
                case STATIC:
                case INTERFACE:
                case CONST:
                case CLONE:
                case GLOBAL:
                case ARRAY:
                case NEW:
                case PREDEFINED_CONSTANT:
                case PHP_END:
                case DOLLAR:
                case SEMICOLON:
                case TRY:
                case THROW:
                case IDENTIFIER:
                case 111:
                case 114:
                case 115:
                case 120:
                case 147:
                case 152:
                case 153:
                case 154:
                case 155:
                case 158: {
                    ;
                    break;
                }
                default:
                    jj_la1[41] = jj_gen;
                    break label_12;
            }
            Statement();
        }
        jj_consume_token(112);
    }

    final public void Statement() throws ParseException {
        if (jj_2_6(2)) {
            NamespaceStatement();
        } else if (jj_2_7(2)) {
            UseStatement();
        } else if (jj_2_8(2)) {
            LabeledStatement();
        } else if (jj_2_9(2)) {
            ClassDeclaration();
        } else if (jj_2_10(2)) {
            InterfaceDeclaration();
        } else if (jj_2_11(2)) {
            ExpressionStatement();
        } else {
            switch ((jj_ntk == -1) ? jj_ntk_f() : jj_ntk) {
                case 111: {
                    CompoundStatement();
                    break;
                }
                case SWITCH:
                case IF: {
                    SelectionStatement();
                    break;
                }
                case DO:
                case WHILE:
                case FOREACH:
                case FOR: {
                    IterationStatement();
                    break;
                }
                case BREAK:
                case RETURN:
                case CONTINUE: {
                    JumpStatement();
                    break;
                }
                case REQUIRE_ONCE:
                case REQUIRE:
                case INCLUDE_ONCE:
                case INCLUDE:
                case 120: {
                    IncludeStatement();
                    break;
                }
                case ECHO:
                case PRINT: {
                    EchoStatement();
                    break;
                }
                case DEFINE: {
                    DefineStatement();
                    break;
                }
                case SLASH_STAR_COMMENT:
                case FUNCTION:
                case VAR:
                case PUBLIC:
                case PRIVATE:
                case PROTECTED:
                case ABSTRACT:
                case FINAL:
                case STATIC:
                case CONST:
                case GLOBAL:
                case DOLLAR: {
                    MemberDeclaration();
                    break;
                }
                case THROW: {
                    ThrowStatement();
                    break;
                }
                case TRY: {
                    TryBlock();
                    break;
                }
                case PHP_END:
                case SEMICOLON: {
                    EndOfStatement();
                    break;
                }
                default:
                    jj_la1[42] = jj_gen;
                    jj_consume_token(-1);
                    throw new ParseException();
            }
        }
    }

    final public void ThrowStatement() throws ParseException {
        jj_consume_token(THROW);
        ClassInstantiation();
        EndOfStatement();
    }

    final public void TryBlock() throws ParseException {
        jj_consume_token(TRY);
        CompoundStatement();
        label_13:
        while (true) {
            jj_consume_token(CATCH);
            jj_consume_token(115);
            jj_consume_token(IDENTIFIER);
            Variable();
            jj_consume_token(116);
            CompoundStatement();
            switch ((jj_ntk == -1) ? jj_ntk_f() : jj_ntk) {
                case CATCH: {
                    ;
                    break;
                }
                default:
                    jj_la1[43] = jj_gen;
                    break label_13;
            }
        }
    }

    final public void DefineStatement() throws ParseException {
        jj_consume_token(DEFINE);
        jj_consume_token(115);
        String();
        jj_consume_token(110);
        Expression();
        jj_consume_token(116);
        EndOfStatement();
    }

    final public void LabeledStatement() throws ParseException {
        switch ((jj_ntk == -1) ? jj_ntk_f() : jj_ntk) {
            case CASE: {
                jj_consume_token(CASE);
                Expression();
                jj_consume_token(117);
                Statement();
                break;
            }
            case DFLT: {
                jj_consume_token(DFLT);
                jj_consume_token(117);
                Statement();
                break;
            }
            default:
                jj_la1[44] = jj_gen;
                jj_consume_token(-1);
                throw new ParseException();
        }
    }

    final public void ExpressionStatement() throws ParseException {
        Expression();
        EndOfStatement();
    }

    final public void SelectionStatement() throws ParseException {
        switch ((jj_ntk == -1) ? jj_ntk_f() : jj_ntk) {
            case IF: {
                jj_consume_token(IF);
                jj_consume_token(115);
                Expression();
                jj_consume_token(116);
                Statement();
                label_14:
                while (true) {
                    if (jj_2_12(2)) {
                        ;
                    } else {
                        break label_14;
                    }
                    jj_consume_token(ELSEIF);
                    jj_consume_token(115);
                    Expression();
                    jj_consume_token(116);
                    Statement();
                }
                if (jj_2_13(2)) {
                    jj_consume_token(ELSE);
                    Statement();
                } else {
                    ;
                }
                break;
            }
            case SWITCH: {
                jj_consume_token(SWITCH);
                jj_consume_token(115);
                Expression();
                jj_consume_token(116);
                Statement();
                break;
            }
            default:
                jj_la1[45] = jj_gen;
                jj_consume_token(-1);
                throw new ParseException();
        }
    }

    final public void IterationStatement() throws ParseException {
        switch ((jj_ntk == -1) ? jj_ntk_f() : jj_ntk) {
            case WHILE: {
                jj_consume_token(WHILE);
                jj_consume_token(115);
                Expression();
                jj_consume_token(116);
                Statement();
                break;
            }
            case DO: {
                jj_consume_token(DO);
                Statement();
                jj_consume_token(WHILE);
                jj_consume_token(115);
                Expression();
                jj_consume_token(116);
                EndOfStatement();
                break;
            }
            case FOR: {
                jj_consume_token(FOR);
                jj_consume_token(115);
                switch ((jj_ntk == -1) ? jj_ntk_f() : jj_ntk) {
                    case INTEGER_LITERAL:
                    case FLOATING_POINT_LITERAL:
                    case DOUBLE_STRING_LITERAL_START:
                    case SINGLE_STRING_LITERAL_START:
                    case HEREDOC_START:
                    case CLASS:
                    case STATIC:
                    case CLONE:
                    case ARRAY:
                    case NEW:
                    case PREDEFINED_CONSTANT:
                    case DOLLAR:
                    case IDENTIFIER:
                    case 114:
                    case 115:
                    case 120:
                    case 147:
                    case 152:
                    case 153:
                    case 154:
                    case 155:
                    case 158: {
                        Expression();
                        break;
                    }
                    default:
                        jj_la1[46] = jj_gen;
                        ;
                }
                jj_consume_token(SEMICOLON);
                switch ((jj_ntk == -1) ? jj_ntk_f() : jj_ntk) {
                    case INTEGER_LITERAL:
                    case FLOATING_POINT_LITERAL:
                    case DOUBLE_STRING_LITERAL_START:
                    case SINGLE_STRING_LITERAL_START:
                    case HEREDOC_START:
                    case CLASS:
                    case STATIC:
                    case CLONE:
                    case ARRAY:
                    case NEW:
                    case PREDEFINED_CONSTANT:
                    case DOLLAR:
                    case IDENTIFIER:
                    case 114:
                    case 115:
                    case 120:
                    case 147:
                    case 152:
                    case 153:
                    case 154:
                    case 155:
                    case 158: {
                        Expression();
                        break;
                    }
                    default:
                        jj_la1[47] = jj_gen;
                        ;
                }
                jj_consume_token(SEMICOLON);
                switch ((jj_ntk == -1) ? jj_ntk_f() : jj_ntk) {
                    case INTEGER_LITERAL:
                    case FLOATING_POINT_LITERAL:
                    case DOUBLE_STRING_LITERAL_START:
                    case SINGLE_STRING_LITERAL_START:
                    case HEREDOC_START:
                    case CLASS:
                    case STATIC:
                    case CLONE:
                    case ARRAY:
                    case NEW:
                    case PREDEFINED_CONSTANT:
                    case DOLLAR:
                    case IDENTIFIER:
                    case 114:
                    case 115:
                    case 120:
                    case 147:
                    case 152:
                    case 153:
                    case 154:
                    case 155:
                    case 158: {
                        Expression();
                        break;
                    }
                    default:
                        jj_la1[48] = jj_gen;
                        ;
                }
                jj_consume_token(116);
                Statement();
                break;
            }
            case FOREACH: {
                jj_consume_token(FOREACH);
                jj_consume_token(115);
                switch ((jj_ntk == -1) ? jj_ntk_f() : jj_ntk) {
                    case INTEGER_LITERAL:
                    case FLOATING_POINT_LITERAL:
                    case DOUBLE_STRING_LITERAL_START:
                    case SINGLE_STRING_LITERAL_START:
                    case HEREDOC_START:
                    case CLASS:
                    case STATIC:
                    case CLONE:
                    case ARRAY:
                    case NEW:
                    case PREDEFINED_CONSTANT:
                    case DOLLAR:
                    case IDENTIFIER:
                    case 114:
                    case 115:
                    case 120:
                    case 147:
                    case 152:
                    case 153:
                    case 154:
                    case 155:
                    case 158: {
                        Expression();
                        break;
                    }
                    default:
                        jj_la1[49] = jj_gen;
                        ;
                }
                jj_consume_token(AS);
                Variable();
                switch ((jj_ntk == -1) ? jj_ntk_f() : jj_ntk) {
                    case 118: {
                        jj_consume_token(118);
                        switch ((jj_ntk == -1) ? jj_ntk_f() : jj_ntk) {
                            case 114: {
                                jj_consume_token(114);
                                break;
                            }
                            default:
                                jj_la1[50] = jj_gen;
                                ;
                        }
                        Variable();
                        break;
                    }
                    default:
                        jj_la1[51] = jj_gen;
                        ;
                }
                jj_consume_token(116);
                Statement();
                break;
            }
            default:
                jj_la1[52] = jj_gen;
                jj_consume_token(-1);
                throw new ParseException();
        }
    }

    final public void JumpStatement() throws ParseException {
        switch ((jj_ntk == -1) ? jj_ntk_f() : jj_ntk) {
            case CONTINUE: {
                jj_consume_token(CONTINUE);
                switch ((jj_ntk == -1) ? jj_ntk_f() : jj_ntk) {
                    case INTEGER_LITERAL: {
                        jj_consume_token(INTEGER_LITERAL);
                        break;
                    }
                    default:
                        jj_la1[53] = jj_gen;
                        ;
                }
                EndOfStatement();
                break;
            }
            case BREAK: {
                jj_consume_token(BREAK);
                switch ((jj_ntk == -1) ? jj_ntk_f() : jj_ntk) {
                    case INTEGER_LITERAL: {
                        jj_consume_token(INTEGER_LITERAL);
                        break;
                    }
                    default:
                        jj_la1[54] = jj_gen;
                        ;
                }
                EndOfStatement();
                break;
            }
            case RETURN: {
                jj_consume_token(RETURN);
                switch ((jj_ntk == -1) ? jj_ntk_f() : jj_ntk) {
                    case INTEGER_LITERAL:
                    case FLOATING_POINT_LITERAL:
                    case DOUBLE_STRING_LITERAL_START:
                    case SINGLE_STRING_LITERAL_START:
                    case HEREDOC_START:
                    case CLASS:
                    case STATIC:
                    case CLONE:
                    case ARRAY:
                    case NEW:
                    case PREDEFINED_CONSTANT:
                    case DOLLAR:
                    case IDENTIFIER:
                    case 114:
                    case 115:
                    case 120:
                    case 147:
                    case 152:
                    case 153:
                    case 154:
                    case 155:
                    case 158: {
                        Expression();
                        break;
                    }
                    default:
                        jj_la1[55] = jj_gen;
                        ;
                }
                EndOfStatement();
                break;
            }
            default:
                jj_la1[56] = jj_gen;
                jj_consume_token(-1);
                throw new ParseException();
        }
    }

    final public void NamespaceStatement() throws ParseException {
        jj_consume_token(NAMESPACE);
        jj_consume_token(IDENTIFIER);
        label_15:
        while (true) {
            switch ((jj_ntk == -1) ? jj_ntk_f() : jj_ntk) {
                case 119: {
                    ;
                    break;
                }
                default:
                    jj_la1[57] = jj_gen;
                    break label_15;
            }
            jj_consume_token(119);
            jj_consume_token(IDENTIFIER);
        }
        EndOfStatement();
    }

    final public void InlineFunction() throws ParseException {
        jj_consume_token(FUNCTION);
        jj_consume_token(115);
        switch ((jj_ntk == -1) ? jj_ntk_f() : jj_ntk) {
            case ARRAY:
            case DOLLAR:
            case IDENTIFIER:
            case 114: {
                ParameterList();
                break;
            }
            default:
                jj_la1[58] = jj_gen;
                ;
        }
        jj_consume_token(116);
        CompoundStatement();
    }

    final public void InterfaceDeclaration() throws ParseException {
        jj_consume_token(INTERFACE);
        jj_consume_token(IDENTIFIER);
        switch ((jj_ntk == -1) ? jj_ntk_f() : jj_ntk) {
            case EXTENDS: {
                jj_consume_token(EXTENDS);
                jj_consume_token(IDENTIFIER);
                label_16:
                while (true) {
                    switch ((jj_ntk == -1) ? jj_ntk_f() : jj_ntk) {
                        case 110: {
                            ;
                            break;
                        }
                        default:
                            jj_la1[59] = jj_gen;
                            break label_16;
                    }
                    jj_consume_token(110);
                    jj_consume_token(IDENTIFIER);
                }
                break;
            }
            default:
                jj_la1[60] = jj_gen;
                ;
        }
        InterfaceMembers();
    }

    final public void InterfaceMembers() throws ParseException {
        jj_consume_token(111);
        label_17:
        while (true) {
            switch ((jj_ntk == -1) ? jj_ntk_f() : jj_ntk) {
                case FUNCTION:
                case PUBLIC:
                case ABSTRACT:
                case CONST:
                case DOLLAR: {
                    ;
                    break;
                }
                default:
                    jj_la1[61] = jj_gen;
                    break label_17;
            }
            switch ((jj_ntk == -1) ? jj_ntk_f() : jj_ntk) {
                case PUBLIC: {
                    jj_consume_token(PUBLIC);
                    break;
                }
                default:
                    jj_la1[62] = jj_gen;
                    ;
            }
            InterfaceMember();
            EndOfStatement();
        }
        jj_consume_token(112);
    }

    final public void InterfaceMember() throws ParseException {
        switch ((jj_ntk == -1) ? jj_ntk_f() : jj_ntk) {
            case FUNCTION:
            case ABSTRACT: {
                switch ((jj_ntk == -1) ? jj_ntk_f() : jj_ntk) {
                    case ABSTRACT: {
                        jj_consume_token(ABSTRACT);
                        break;
                    }
                    default:
                        jj_la1[63] = jj_gen;
                        ;
                }
                jj_consume_token(FUNCTION);
                switch ((jj_ntk == -1) ? jj_ntk_f() : jj_ntk) {
                    case 114: {
                        jj_consume_token(114);
                        break;
                    }
                    default:
                        jj_la1[64] = jj_gen;
                        ;
                }
                jj_consume_token(IDENTIFIER);
                jj_consume_token(115);
                switch ((jj_ntk == -1) ? jj_ntk_f() : jj_ntk) {
                    case ARRAY:
                    case DOLLAR:
                    case IDENTIFIER:
                    case 114: {
                        ParameterList();
                        break;
                    }
                    default:
                        jj_la1[65] = jj_gen;
                        ;
                }
                jj_consume_token(116);
                switch ((jj_ntk == -1) ? jj_ntk_f() : jj_ntk) {
                    case 111: {
                        jj_consume_token(111);
                        jj_consume_token(112);
                        break;
                    }
                    default:
                        jj_la1[66] = jj_gen;
                        ;
                }
                break;
            }
            case DOLLAR: {
                jj_consume_token(DOLLAR);
                jj_consume_token(VAR_NAME);
                label_18:
                while (true) {
                    switch ((jj_ntk == -1) ? jj_ntk_f() : jj_ntk) {
                        case 110: {
                            ;
                            break;
                        }
                        default:
                            jj_la1[67] = jj_gen;
                            break label_18;
                    }
                    jj_consume_token(110);
                    jj_consume_token(DOLLAR);
                    jj_consume_token(VAR_NAME);
                }
                break;
            }
            case CONST: {
                jj_consume_token(CONST);
                jj_consume_token(IDENTIFIER);
                jj_consume_token(113);
                Expression();
                break;
            }
            default:
                jj_la1[68] = jj_gen;
                jj_consume_token(-1);
                throw new ParseException();
        }
    }

    final public void IncludeStatement() throws ParseException {
        switch ((jj_ntk == -1) ? jj_ntk_f() : jj_ntk) {
            case 120: {
                jj_consume_token(120);
                break;
            }
            default:
                jj_la1[69] = jj_gen;
                ;
        }
        switch ((jj_ntk == -1) ? jj_ntk_f() : jj_ntk) {
            case INCLUDE: {
                jj_consume_token(INCLUDE);
                break;
            }
            case INCLUDE_ONCE: {
                jj_consume_token(INCLUDE_ONCE);
                break;
            }
            case REQUIRE: {
                jj_consume_token(REQUIRE);
                break;
            }
            case REQUIRE_ONCE: {
                jj_consume_token(REQUIRE_ONCE);
                break;
            }
            default:
                jj_la1[70] = jj_gen;
                jj_consume_token(-1);
                throw new ParseException();
        }
        if (jj_2_14(2)) {
            jj_consume_token(115);
            Expression();
            jj_consume_token(116);
        } else {
            switch ((jj_ntk == -1) ? jj_ntk_f() : jj_ntk) {
                case INTEGER_LITERAL:
                case FLOATING_POINT_LITERAL:
                case DOUBLE_STRING_LITERAL_START:
                case SINGLE_STRING_LITERAL_START:
                case HEREDOC_START:
                case CLASS:
                case STATIC:
                case CLONE:
                case ARRAY:
                case NEW:
                case PREDEFINED_CONSTANT:
                case DOLLAR:
                case IDENTIFIER:
                case 114:
                case 115:
                case 120:
                case 147:
                case 152:
                case 153:
                case 154:
                case 155:
                case 158: {
                    Expression();
                    break;
                }
                default:
                    jj_la1[71] = jj_gen;
                    jj_consume_token(-1);
                    throw new ParseException();
            }
        }
        EndOfStatement();
    }

    final public void EchoStatement() throws ParseException {
        switch ((jj_ntk == -1) ? jj_ntk_f() : jj_ntk) {
            case ECHO: {
                jj_consume_token(ECHO);
                break;
            }
            case PRINT: {
                jj_consume_token(PRINT);
                break;
            }
            default:
                jj_la1[72] = jj_gen;
                jj_consume_token(-1);
                throw new ParseException();
        }
        ArgumentExpressionList();
        EndOfStatement();
    }

    final public void Expression() throws ParseException {
        LogicalTextOrExpression();
    }

    final public void LogicalTextOrExpression() throws ParseException {
        LogicalTextXorExpression();
        if (jj_2_15(2)) {
            jj_consume_token(OR);
            LogicalTextOrExpression();
        } else {
            ;
        }
    }

    final public void LogicalTextXorExpression() throws ParseException {
        LogicalTextAndExpression();
        if (jj_2_16(2)) {
            jj_consume_token(XOR);
            LogicalTextXorExpression();
        } else {
            ;
        }
    }

    final public void LogicalTextAndExpression() throws ParseException {
        AssignmentExpression();
        if (jj_2_17(2)) {
            jj_consume_token(AND);
            LogicalTextAndExpression();
        } else {
            ;
        }
    }

    final public void AssignmentExpression() throws ParseException {
        ConditionalExpression();
        if (jj_2_18(2)) {
            AssignmentOperator();
            switch ((jj_ntk == -1) ? jj_ntk_f() : jj_ntk) {
                case INTEGER_LITERAL:
                case FLOATING_POINT_LITERAL:
                case DOUBLE_STRING_LITERAL_START:
                case SINGLE_STRING_LITERAL_START:
                case HEREDOC_START:
                case CLASS:
                case STATIC:
                case CLONE:
                case ARRAY:
                case NEW:
                case PREDEFINED_CONSTANT:
                case DOLLAR:
                case IDENTIFIER:
                case 114:
                case 115:
                case 120:
                case 147:
                case 152:
                case 153:
                case 154:
                case 155:
                case 158: {
                    Expression();
                    break;
                }
                case FUNCTION: {
                    InlineFunction();
                    break;
                }
                default:
                    jj_la1[73] = jj_gen;
                    jj_consume_token(-1);
                    throw new ParseException();
            }
        } else {
            ;
        }
    }

    final public void AssignmentOperator() throws ParseException {
        switch ((jj_ntk == -1) ? jj_ntk_f() : jj_ntk) {
            case 113: {
                jj_consume_token(113);
                break;
            }
            case 121: {
                jj_consume_token(121);
                break;
            }
            case 122: {
                jj_consume_token(122);
                break;
            }
            case 123: {
                jj_consume_token(123);
                break;
            }
            case 124: {
                jj_consume_token(124);
                break;
            }
            case 125: {
                jj_consume_token(125);
                break;
            }
            case 126: {
                jj_consume_token(126);
                break;
            }
            case 127: {
                jj_consume_token(127);
                break;
            }
            case 128: {
                jj_consume_token(128);
                break;
            }
            case 129: {
                jj_consume_token(129);
                break;
            }
            case 130: {
                jj_consume_token(130);
                break;
            }
            case 131: {
                jj_consume_token(131);
                break;
            }
            default:
                jj_la1[74] = jj_gen;
                jj_consume_token(-1);
                throw new ParseException();
        }
    }

    final public void ConditionalExpression() throws ParseException {
        Logical_Or_Expression();
        if (jj_2_19(2)) {
            jj_consume_token(132);
            Expression();
            jj_consume_token(117);
            Expression();
        } else {
            ;
        }
    }

    final public void Logical_Or_Expression() throws ParseException {
        Logical_And_Expression();
        if (jj_2_20(2)) {
            jj_consume_token(133);
            Logical_Or_Expression();
        } else {
            ;
        }
    }

    final public void Logical_And_Expression() throws ParseException {
        BitwiseOrExpression();
        if (jj_2_21(2)) {
            jj_consume_token(134);
            Logical_And_Expression();
        } else {
            ;
        }
    }

    final public void BitwiseOrExpression() throws ParseException {
        BitwiseXorExpression();
        if (jj_2_22(2)) {
            jj_consume_token(135);
            BitwiseOrExpression();
        } else {
            ;
        }
    }

    final public void BitwiseXorExpression() throws ParseException {
        BitwiseAndExpression();
        if (jj_2_23(2)) {
            jj_consume_token(136);
            BitwiseXorExpression();
        } else {
            ;
        }
    }

    final public void BitwiseAndExpression() throws ParseException {
        EqualityExpression();
        if (jj_2_24(2)) {
            jj_consume_token(114);
            BitwiseAndExpression();
        } else {
            ;
        }
    }

    final public void EqualityExpression() throws ParseException {
        RelationalExpression();
        if (jj_2_25(2)) {
            switch ((jj_ntk == -1) ? jj_ntk_f() : jj_ntk) {
                case 137: {
                    jj_consume_token(137);
                    break;
                }
                case 138: {
                    jj_consume_token(138);
                    break;
                }
                case 139: {
                    jj_consume_token(139);
                    break;
                }
                case 140: {
                    jj_consume_token(140);
                    break;
                }
                default:
                    jj_la1[75] = jj_gen;
                    jj_consume_token(-1);
                    throw new ParseException();
            }
            EqualityExpression();
        } else {
            ;
        }
    }

    final public void RelationalExpression() throws ParseException {
        ShiftExpression();
        if (jj_2_26(2)) {
            switch ((jj_ntk == -1) ? jj_ntk_f() : jj_ntk) {
                case GT: {
                    jj_consume_token(GT);
                    break;
                }
                case 141: {
                    jj_consume_token(141);
                    break;
                }
                case 142: {
                    jj_consume_token(142);
                    break;
                }
                case 143: {
                    jj_consume_token(143);
                    break;
                }
                default:
                    jj_la1[76] = jj_gen;
                    jj_consume_token(-1);
                    throw new ParseException();
            }
            RelationalExpression();
        } else {
            ;
        }
    }

    final public void ShiftExpression() throws ParseException {
        AdditiveExpression();
        if (jj_2_27(2)) {
            switch ((jj_ntk == -1) ? jj_ntk_f() : jj_ntk) {
                case 144: {
                    jj_consume_token(144);
                    break;
                }
                case 145: {
                    jj_consume_token(145);
                    break;
                }
                default:
                    jj_la1[77] = jj_gen;
                    jj_consume_token(-1);
                    throw new ParseException();
            }
            ShiftExpression();
        } else {
            ;
        }
    }

    final public void AdditiveExpression() throws ParseException {
        MultiplicativeExpression();
        if (jj_2_28(2)) {
            switch ((jj_ntk == -1) ? jj_ntk_f() : jj_ntk) {
                case 146: {
                    jj_consume_token(146);
                    break;
                }
                case 147: {
                    jj_consume_token(147);
                    break;
                }
                case 148: {
                    jj_consume_token(148);
                    break;
                }
                default:
                    jj_la1[78] = jj_gen;
                    jj_consume_token(-1);
                    throw new ParseException();
            }
            AdditiveExpression();
        } else {
            ;
        }
    }

    final public void MultiplicativeExpression() throws ParseException {
        CastExpression();
        if (jj_2_29(2)) {
            switch ((jj_ntk == -1) ? jj_ntk_f() : jj_ntk) {
                case 149: {
                    jj_consume_token(149);
                    break;
                }
                case 150: {
                    jj_consume_token(150);
                    break;
                }
                case 151: {
                    jj_consume_token(151);
                    break;
                }
                default:
                    jj_la1[79] = jj_gen;
                    jj_consume_token(-1);
                    throw new ParseException();
            }
            MultiplicativeExpression();
        } else {
            ;
        }
    }

    final public void CastExpression() throws ParseException {
        if (jj_2_30(2147483647)) {
            jj_consume_token(115);
            jj_consume_token(VARTYPE);
            jj_consume_token(116);
        } else {
            ;
        }
        UnaryExpression();
    }

    final public void UnaryExpression() throws ParseException {
        label_19:
        while (true) {
            switch ((jj_ntk == -1) ? jj_ntk_f() : jj_ntk) {
                case 114:
                case 147:
                case 152:
                case 153: {
                    ;
                    break;
                }
                default:
                    jj_la1[80] = jj_gen;
                    break label_19;
            }
            switch ((jj_ntk == -1) ? jj_ntk_f() : jj_ntk) {
                case 114: {
                    jj_consume_token(114);
                    break;
                }
                case 147: {
                    jj_consume_token(147);
                    break;
                }
                case 152: {
                    jj_consume_token(152);
                    break;
                }
                case 153: {
                    jj_consume_token(153);
                    break;
                }
                default:
                    jj_la1[81] = jj_gen;
                    jj_consume_token(-1);
                    throw new ParseException();
            }
        }
        PrefixIncDecExpression();
    }

    final public void PrefixIncDecExpression() throws ParseException {
        label_20:
        while (true) {
            switch ((jj_ntk == -1) ? jj_ntk_f() : jj_ntk) {
                case 154:
                case 155: {
                    ;
                    break;
                }
                default:
                    jj_la1[82] = jj_gen;
                    break label_20;
            }
            switch ((jj_ntk == -1) ? jj_ntk_f() : jj_ntk) {
                case 154: {
                    jj_consume_token(154);
                    break;
                }
                case 155: {
                    jj_consume_token(155);
                    break;
                }
                default:
                    jj_la1[83] = jj_gen;
                    jj_consume_token(-1);
                    throw new ParseException();
            }
        }
        PostfixIncDecExpression();
    }

    final public void PostfixIncDecExpression() throws ParseException {
        InstanceOfExpression();
        label_21:
        while (true) {
            switch ((jj_ntk == -1) ? jj_ntk_f() : jj_ntk) {
                case 154:
                case 155: {
                    ;
                    break;
                }
                default:
                    jj_la1[84] = jj_gen;
                    break label_21;
            }
            switch ((jj_ntk == -1) ? jj_ntk_f() : jj_ntk) {
                case 154: {
                    jj_consume_token(154);
                    break;
                }
                case 155: {
                    jj_consume_token(155);
                    break;
                }
                default:
                    jj_la1[85] = jj_gen;
                    jj_consume_token(-1);
                    throw new ParseException();
            }
        }
    }

    final public void InstanceOfExpression() throws ParseException {
        PostfixExpression();
        if (jj_2_31(2)) {
            jj_consume_token(INSTANCEOF);
            Expression();
        } else {
            ;
        }
    }

    final public void PostfixExpression() throws ParseException {
        PrimaryExpression();
        label_22:
        while (true) {
            switch ((jj_ntk == -1) ? jj_ntk_f() : jj_ntk) {
                case 111:
                case 115:
                case 156:
                case 157:
                case 158: {
                    ;
                    break;
                }
                default:
                    jj_la1[86] = jj_gen;
                    break label_22;
            }
            switch ((jj_ntk == -1) ? jj_ntk_f() : jj_ntk) {
                case 115: {
                    jj_consume_token(115);
                    ArgumentExpressionList();
                    jj_consume_token(116);
                    break;
                }
                case 156: {
                    jj_consume_token(156);
                    PostfixExpression();
                    break;
                }
                case 157: {
                    jj_consume_token(157);
                    PostfixExpression();
                    break;
                }
                case 158: {
                    jj_consume_token(158);
                    switch ((jj_ntk == -1) ? jj_ntk_f() : jj_ntk) {
                        case INTEGER_LITERAL:
                        case FLOATING_POINT_LITERAL:
                        case DOUBLE_STRING_LITERAL_START:
                        case SINGLE_STRING_LITERAL_START:
                        case HEREDOC_START:
                        case CLASS:
                        case STATIC:
                        case CLONE:
                        case ARRAY:
                        case NEW:
                        case PREDEFINED_CONSTANT:
                        case DOLLAR:
                        case IDENTIFIER:
                        case 114:
                        case 115:
                        case 120:
                        case 147:
                        case 152:
                        case 153:
                        case 154:
                        case 155:
                        case 158: {
                            Expression();
                            break;
                        }
                        default:
                            jj_la1[87] = jj_gen;
                            ;
                    }
                    jj_consume_token(159);
                    break;
                }
                case 111: {
                    jj_consume_token(111);
                    Expression();
                    jj_consume_token(112);
                    break;
                }
                default:
                    jj_la1[88] = jj_gen;
                    jj_consume_token(-1);
                    throw new ParseException();
            }
        }
    }

    final public void PrimaryExpression() throws ParseException {
        if (jj_2_32(2)) {
            switch ((jj_ntk == -1) ? jj_ntk_f() : jj_ntk) {
                case 120: {
                    jj_consume_token(120);
                    break;
                }
                default:
                    jj_la1[89] = jj_gen;
                    ;
            }
            Variable();
        } else {
            switch ((jj_ntk == -1) ? jj_ntk_f() : jj_ntk) {
                case INTEGER_LITERAL:
                case FLOATING_POINT_LITERAL:
                case DOUBLE_STRING_LITERAL_START:
                case SINGLE_STRING_LITERAL_START:
                case HEREDOC_START:
                case CLASS:
                case PREDEFINED_CONSTANT:
                case IDENTIFIER:
                case 120: {
                    switch ((jj_ntk == -1) ? jj_ntk_f() : jj_ntk) {
                        case 120: {
                            jj_consume_token(120);
                            break;
                        }
                        default:
                            jj_la1[90] = jj_gen;
                            ;
                    }
                    Constant();
                    break;
                }
                case 115: {
                    jj_consume_token(115);
                    Expression();
                    jj_consume_token(116);
                    break;
                }
                case CLONE:
                case NEW: {
                    ClassInstantiation();
                    break;
                }
                case ARRAY: {
                    Array();
                    break;
                }
                case 158: {
                    ArrayShort();
                    break;
                }
                case STATIC: {
                    jj_consume_token(STATIC);
                    break;
                }
                default:
                    jj_la1[91] = jj_gen;
                    jj_consume_token(-1);
                    throw new ParseException();
            }
        }
    }

    final public void Array() throws ParseException {
        jj_consume_token(ARRAY);
        jj_consume_token(115);
        ArrayContent();
        jj_consume_token(116);
    }

    final public void ArrayShort() throws ParseException {
        jj_consume_token(158);
        ArrayContent();
        jj_consume_token(159);
    }

    final public void ArrayContent() throws ParseException {
        switch ((jj_ntk == -1) ? jj_ntk_f() : jj_ntk) {
            case INTEGER_LITERAL:
            case FLOATING_POINT_LITERAL:
            case DOUBLE_STRING_LITERAL_START:
            case SINGLE_STRING_LITERAL_START:
            case HEREDOC_START:
            case CLASS:
            case STATIC:
            case CLONE:
            case ARRAY:
            case NEW:
            case PREDEFINED_CONSTANT:
            case DOLLAR:
            case IDENTIFIER:
            case 114:
            case 115:
            case 120:
            case 147:
            case 152:
            case 153:
            case 154:
            case 155:
            case 158: {
                Expression();
                switch ((jj_ntk == -1) ? jj_ntk_f() : jj_ntk) {
                    case 118: {
                        jj_consume_token(118);
                        Expression();
                        break;
                    }
                    default:
                        jj_la1[92] = jj_gen;
                        ;
                }
                break;
            }
            default:
                jj_la1[93] = jj_gen;
                ;
        }
        label_23:
        while (true) {
            switch ((jj_ntk == -1) ? jj_ntk_f() : jj_ntk) {
                case 110: {
                    ;
                    break;
                }
                default:
                    jj_la1[94] = jj_gen;
                    break label_23;
            }
            jj_consume_token(110);
            switch ((jj_ntk == -1) ? jj_ntk_f() : jj_ntk) {
                case INTEGER_LITERAL:
                case FLOATING_POINT_LITERAL:
                case DOUBLE_STRING_LITERAL_START:
                case SINGLE_STRING_LITERAL_START:
                case HEREDOC_START:
                case CLASS:
                case STATIC:
                case CLONE:
                case ARRAY:
                case NEW:
                case PREDEFINED_CONSTANT:
                case DOLLAR:
                case IDENTIFIER:
                case 114:
                case 115:
                case 120:
                case 147:
                case 152:
                case 153:
                case 154:
                case 155:
                case 158: {
                    Expression();
                    switch ((jj_ntk == -1) ? jj_ntk_f() : jj_ntk) {
                        case 118: {
                            jj_consume_token(118);
                            Expression();
                            break;
                        }
                        default:
                            jj_la1[95] = jj_gen;
                            ;
                    }
                    break;
                }
                default:
                    jj_la1[96] = jj_gen;
                    ;
            }
        }
    }

    final public void ClassInstantiation() throws ParseException {
        switch ((jj_ntk == -1) ? jj_ntk_f() : jj_ntk) {
            case NEW: {
                jj_consume_token(NEW);
                Expression();
                if (jj_2_33(3)) {
                    jj_consume_token(115);
                    ArgumentExpressionList();
                    jj_consume_token(116);
                } else {
                    ;
                }
                break;
            }
            case CLONE: {
                jj_consume_token(CLONE);
                Variable();
                break;
            }
            default:
                jj_la1[97] = jj_gen;
                jj_consume_token(-1);
                throw new ParseException();
        }
    }

    final public void ArgumentExpressionList() throws ParseException {
        switch ((jj_ntk == -1) ? jj_ntk_f() : jj_ntk) {
            case INTEGER_LITERAL:
            case FLOATING_POINT_LITERAL:
            case DOUBLE_STRING_LITERAL_START:
            case SINGLE_STRING_LITERAL_START:
            case HEREDOC_START:
            case CLASS:
            case STATIC:
            case CLONE:
            case ARRAY:
            case NEW:
            case PREDEFINED_CONSTANT:
            case DOLLAR:
            case IDENTIFIER:
            case 114:
            case 115:
            case 120:
            case 147:
            case 152:
            case 153:
            case 154:
            case 155:
            case 158: {
                Expression();
                break;
            }
            default:
                jj_la1[98] = jj_gen;
                ;
        }
        label_24:
        while (true) {
            switch ((jj_ntk == -1) ? jj_ntk_f() : jj_ntk) {
                case 110: {
                    ;
                    break;
                }
                default:
                    jj_la1[99] = jj_gen;
                    break label_24;
            }
            jj_consume_token(110);
            Expression();
        }
    }

    final public void Constant() throws ParseException {
        switch ((jj_ntk == -1) ? jj_ntk_f() : jj_ntk) {
            case INTEGER_LITERAL: {
                jj_consume_token(INTEGER_LITERAL);
                break;
            }
            case FLOATING_POINT_LITERAL: {
                jj_consume_token(FLOATING_POINT_LITERAL);
                break;
            }
            case DOUBLE_STRING_LITERAL_START:
            case SINGLE_STRING_LITERAL_START:
            case HEREDOC_START: {
                String();
                break;
            }
            case PREDEFINED_CONSTANT: {
                jj_consume_token(PREDEFINED_CONSTANT);
                break;
            }
            case IDENTIFIER: {
                jj_consume_token(IDENTIFIER);
                break;
            }
            case CLASS: {
                jj_consume_token(CLASS);
                break;
            }
            default:
                jj_la1[100] = jj_gen;
                jj_consume_token(-1);
                throw new ParseException();
        }
    }

    final public void String() throws ParseException {
        switch ((jj_ntk == -1) ? jj_ntk_f() : jj_ntk) {
            case DOUBLE_STRING_LITERAL_START: {
                DoubleStringLiteral();
                break;
            }
            case SINGLE_STRING_LITERAL_START: {
                jj_consume_token(SINGLE_STRING_LITERAL_START);
                jj_consume_token(SINGLE_STRING_LITERAL_END);
                break;
            }
            case HEREDOC_START: {
                jj_consume_token(HEREDOC_START);
                break;
            }
            default:
                jj_la1[101] = jj_gen;
                jj_consume_token(-1);
                throw new ParseException();
        }
    }

    final public void DoubleStringLiteral() throws ParseException {
        jj_consume_token(DOUBLE_STRING_LITERAL_START);
        if (jj_2_34(2)) {
            jj_consume_token(DSL_SIMPLE_VAR_START);
            jj_consume_token(DSL_SIMPLE_STRING_VAR_END);
        } else {
            switch ((jj_ntk == -1) ? jj_ntk_f() : jj_ntk) {
                case DOUBLE_STRING_LITERAL_END:
                case DSL_SIMPLE_VAR_START:
                case DSL_COMPLEX_VAR_START: {
                    label_25:
                    while (true) {
                        switch ((jj_ntk == -1) ? jj_ntk_f() : jj_ntk) {
                            case DSL_SIMPLE_VAR_START:
                            case DSL_COMPLEX_VAR_START: {
                                ;
                                break;
                            }
                            default:
                                jj_la1[102] = jj_gen;
                                break label_25;
                        }
                        switch ((jj_ntk == -1) ? jj_ntk_f() : jj_ntk) {
                            case DSL_SIMPLE_VAR_START: {
                                jj_consume_token(DSL_SIMPLE_VAR_START);
                                switch ((jj_ntk == -1) ? jj_ntk_f() : jj_ntk) {
                                    case DSL_SIMPLE_VAR_END: {
                                        jj_consume_token(DSL_SIMPLE_VAR_END);
                                        break;
                                    }
                                    case DSL_SIMPLE_VAR_WASNT: {
                                        jj_consume_token(DSL_SIMPLE_VAR_WASNT);
                                        break;
                                    }
                                    default:
                                        jj_la1[103] = jj_gen;
                                        jj_consume_token(-1);
                                        throw new ParseException();
                                }
                                break;
                            }
                            case DSL_COMPLEX_VAR_START: {
                                jj_consume_token(DSL_COMPLEX_VAR_START);
                                jj_consume_token(DSL_COMPLEX_VAR_END);
                                break;
                            }
                            default:
                                jj_la1[104] = jj_gen;
                                jj_consume_token(-1);
                                throw new ParseException();
                        }
                    }
                    jj_consume_token(DOUBLE_STRING_LITERAL_END);
                    break;
                }
                default:
                    jj_la1[105] = jj_gen;
                    jj_consume_token(-1);
                    throw new ParseException();
            }
        }
    }

    private boolean jj_2_1(int xla) {
        jj_la = xla;
        jj_lastpos = jj_scanpos = token;
        try {
            return !jj_3_1();
        } catch (LookaheadSuccess ls) {
            return true;
        } finally {
            jj_save(0, xla);
        }
    }

    private boolean jj_2_2(int xla) {
        jj_la = xla;
        jj_lastpos = jj_scanpos = token;
        try {
            return !jj_3_2();
        } catch (LookaheadSuccess ls) {
            return true;
        } finally {
            jj_save(1, xla);
        }
    }

    private boolean jj_2_3(int xla) {
        jj_la = xla;
        jj_lastpos = jj_scanpos = token;
        try {
            return !jj_3_3();
        } catch (LookaheadSuccess ls) {
            return true;
        } finally {
            jj_save(2, xla);
        }
    }

    private boolean jj_2_4(int xla) {
        jj_la = xla;
        jj_lastpos = jj_scanpos = token;
        try {
            return !jj_3_4();
        } catch (LookaheadSuccess ls) {
            return true;
        } finally {
            jj_save(3, xla);
        }
    }

    private boolean jj_2_5(int xla) {
        jj_la = xla;
        jj_lastpos = jj_scanpos = token;
        try {
            return !jj_3_5();
        } catch (LookaheadSuccess ls) {
            return true;
        } finally {
            jj_save(4, xla);
        }
    }

    private boolean jj_2_6(int xla) {
        jj_la = xla;
        jj_lastpos = jj_scanpos = token;
        try {
            return !jj_3_6();
        } catch (LookaheadSuccess ls) {
            return true;
        } finally {
            jj_save(5, xla);
        }
    }

    private boolean jj_2_7(int xla) {
        jj_la = xla;
        jj_lastpos = jj_scanpos = token;
        try {
            return !jj_3_7();
        } catch (LookaheadSuccess ls) {
            return true;
        } finally {
            jj_save(6, xla);
        }
    }

    private boolean jj_2_8(int xla) {
        jj_la = xla;
        jj_lastpos = jj_scanpos = token;
        try {
            return !jj_3_8();
        } catch (LookaheadSuccess ls) {
            return true;
        } finally {
            jj_save(7, xla);
        }
    }

    private boolean jj_2_9(int xla) {
        jj_la = xla;
        jj_lastpos = jj_scanpos = token;
        try {
            return !jj_3_9();
        } catch (LookaheadSuccess ls) {
            return true;
        } finally {
            jj_save(8, xla);
        }
    }

    private boolean jj_2_10(int xla) {
        jj_la = xla;
        jj_lastpos = jj_scanpos = token;
        try {
            return !jj_3_10();
        } catch (LookaheadSuccess ls) {
            return true;
        } finally {
            jj_save(9, xla);
        }
    }

    private boolean jj_2_11(int xla) {
        jj_la = xla;
        jj_lastpos = jj_scanpos = token;
        try {
            return !jj_3_11();
        } catch (LookaheadSuccess ls) {
            return true;
        } finally {
            jj_save(10, xla);
        }
    }

    private boolean jj_2_12(int xla) {
        jj_la = xla;
        jj_lastpos = jj_scanpos = token;
        try {
            return !jj_3_12();
        } catch (LookaheadSuccess ls) {
            return true;
        } finally {
            jj_save(11, xla);
        }
    }

    private boolean jj_2_13(int xla) {
        jj_la = xla;
        jj_lastpos = jj_scanpos = token;
        try {
            return !jj_3_13();
        } catch (LookaheadSuccess ls) {
            return true;
        } finally {
            jj_save(12, xla);
        }
    }

    private boolean jj_2_14(int xla) {
        jj_la = xla;
        jj_lastpos = jj_scanpos = token;
        try {
            return !jj_3_14();
        } catch (LookaheadSuccess ls) {
            return true;
        } finally {
            jj_save(13, xla);
        }
    }

    private boolean jj_2_15(int xla) {
        jj_la = xla;
        jj_lastpos = jj_scanpos = token;
        try {
            return !jj_3_15();
        } catch (LookaheadSuccess ls) {
            return true;
        } finally {
            jj_save(14, xla);
        }
    }

    private boolean jj_2_16(int xla) {
        jj_la = xla;
        jj_lastpos = jj_scanpos = token;
        try {
            return !jj_3_16();
        } catch (LookaheadSuccess ls) {
            return true;
        } finally {
            jj_save(15, xla);
        }
    }

    private boolean jj_2_17(int xla) {
        jj_la = xla;
        jj_lastpos = jj_scanpos = token;
        try {
            return !jj_3_17();
        } catch (LookaheadSuccess ls) {
            return true;
        } finally {
            jj_save(16, xla);
        }
    }

    private boolean jj_2_18(int xla) {
        jj_la = xla;
        jj_lastpos = jj_scanpos = token;
        try {
            return !jj_3_18();
        } catch (LookaheadSuccess ls) {
            return true;
        } finally {
            jj_save(17, xla);
        }
    }

    private boolean jj_2_19(int xla) {
        jj_la = xla;
        jj_lastpos = jj_scanpos = token;
        try {
            return !jj_3_19();
        } catch (LookaheadSuccess ls) {
            return true;
        } finally {
            jj_save(18, xla);
        }
    }

    private boolean jj_2_20(int xla) {
        jj_la = xla;
        jj_lastpos = jj_scanpos = token;
        try {
            return !jj_3_20();
        } catch (LookaheadSuccess ls) {
            return true;
        } finally {
            jj_save(19, xla);
        }
    }

    private boolean jj_2_21(int xla) {
        jj_la = xla;
        jj_lastpos = jj_scanpos = token;
        try {
            return !jj_3_21();
        } catch (LookaheadSuccess ls) {
            return true;
        } finally {
            jj_save(20, xla);
        }
    }

    private boolean jj_2_22(int xla) {
        jj_la = xla;
        jj_lastpos = jj_scanpos = token;
        try {
            return !jj_3_22();
        } catch (LookaheadSuccess ls) {
            return true;
        } finally {
            jj_save(21, xla);
        }
    }

    private boolean jj_2_23(int xla) {
        jj_la = xla;
        jj_lastpos = jj_scanpos = token;
        try {
            return !jj_3_23();
        } catch (LookaheadSuccess ls) {
            return true;
        } finally {
            jj_save(22, xla);
        }
    }

    private boolean jj_2_24(int xla) {
        jj_la = xla;
        jj_lastpos = jj_scanpos = token;
        try {
            return !jj_3_24();
        } catch (LookaheadSuccess ls) {
            return true;
        } finally {
            jj_save(23, xla);
        }
    }

    private boolean jj_2_25(int xla) {
        jj_la = xla;
        jj_lastpos = jj_scanpos = token;
        try {
            return !jj_3_25();
        } catch (LookaheadSuccess ls) {
            return true;
        } finally {
            jj_save(24, xla);
        }
    }

    private boolean jj_2_26(int xla) {
        jj_la = xla;
        jj_lastpos = jj_scanpos = token;
        try {
            return !jj_3_26();
        } catch (LookaheadSuccess ls) {
            return true;
        } finally {
            jj_save(25, xla);
        }
    }

    private boolean jj_2_27(int xla) {
        jj_la = xla;
        jj_lastpos = jj_scanpos = token;
        try {
            return !jj_3_27();
        } catch (LookaheadSuccess ls) {
            return true;
        } finally {
            jj_save(26, xla);
        }
    }

    private boolean jj_2_28(int xla) {
        jj_la = xla;
        jj_lastpos = jj_scanpos = token;
        try {
            return !jj_3_28();
        } catch (LookaheadSuccess ls) {
            return true;
        } finally {
            jj_save(27, xla);
        }
    }

    private boolean jj_2_29(int xla) {
        jj_la = xla;
        jj_lastpos = jj_scanpos = token;
        try {
            return !jj_3_29();
        } catch (LookaheadSuccess ls) {
            return true;
        } finally {
            jj_save(28, xla);
        }
    }

    private boolean jj_2_30(int xla) {
        jj_la = xla;
        jj_lastpos = jj_scanpos = token;
        try {
            return !jj_3_30();
        } catch (LookaheadSuccess ls) {
            return true;
        } finally {
            jj_save(29, xla);
        }
    }

    private boolean jj_2_31(int xla) {
        jj_la = xla;
        jj_lastpos = jj_scanpos = token;
        try {
            return !jj_3_31();
        } catch (LookaheadSuccess ls) {
            return true;
        } finally {
            jj_save(30, xla);
        }
    }

    private boolean jj_2_32(int xla) {
        jj_la = xla;
        jj_lastpos = jj_scanpos = token;
        try {
            return !jj_3_32();
        } catch (LookaheadSuccess ls) {
            return true;
        } finally {
            jj_save(31, xla);
        }
    }

    private boolean jj_2_33(int xla) {
        jj_la = xla;
        jj_lastpos = jj_scanpos = token;
        try {
            return !jj_3_33();
        } catch (LookaheadSuccess ls) {
            return true;
        } finally {
            jj_save(32, xla);
        }
    }

    private boolean jj_2_34(int xla) {
        jj_la = xla;
        jj_lastpos = jj_scanpos = token;
        try {
            return !jj_3_34();
        } catch (LookaheadSuccess ls) {
            return true;
        } finally {
            jj_save(33, xla);
        }
    }

    private boolean jj_3_34() {
        if (jj_scan_token(DSL_SIMPLE_VAR_START)) return true;
        if (jj_scan_token(DSL_SIMPLE_STRING_VAR_END)) return true;
        return false;
    }

    private boolean jj_3R_88() {
        Token xsp;
        xsp = jj_scanpos;
        if (jj_3R_104()) {
            jj_scanpos = xsp;
            if (jj_3R_105()) {
                jj_scanpos = xsp;
                if (jj_3R_106()) {
                    jj_scanpos = xsp;
                    if (jj_3R_107()) {
                        jj_scanpos = xsp;
                        if (jj_3R_108()) {
                            jj_scanpos = xsp;
                            if (jj_scan_token(11)) return true;
                        }
                    }
                }
            }
        }
        return false;
    }

    private boolean jj_3R_139() {
        if (jj_scan_token(DOUBLE_STRING_LITERAL_START)) return true;
        Token xsp;
        xsp = jj_scanpos;
        if (jj_3_34()) {
            jj_scanpos = xsp;
            if (jj_3R_150()) return true;
        }
        return false;
    }

    private boolean jj_3R_79() {
        if (jj_scan_token(110)) return true;
        if (jj_3R_37()) return true;
        return false;
    }

    private boolean jj_3_33() {
        if (jj_scan_token(115)) return true;
        if (jj_3R_55()) return true;
        if (jj_scan_token(116)) return true;
        return false;
    }

    private boolean jj_3R_138() {
        if (jj_scan_token(SINGLE_STRING_LITERAL_START)) return true;
        if (jj_scan_token(SINGLE_STRING_LITERAL_END)) return true;
        return false;
    }

    private boolean jj_3R_137() {
        if (jj_3R_139()) return true;
        return false;
    }

    private boolean jj_3R_136() {
        Token xsp;
        xsp = jj_scanpos;
        if (jj_3R_137()) {
            jj_scanpos = xsp;
            if (jj_3R_138()) {
                jj_scanpos = xsp;
                if (jj_scan_token(20)) return true;
            }
        }
        return false;
    }

    private boolean jj_3R_111() {
        Token xsp;
        xsp = jj_scanpos;
        if (jj_scan_token(4)) {
            jj_scanpos = xsp;
            if (jj_scan_token(3)) return true;
        }
        return false;
    }

    private boolean jj_3R_129() {
        Token xsp;
        xsp = jj_scanpos;
        if (jj_scan_token(12)) {
            jj_scanpos = xsp;
            if (jj_scan_token(16)) {
                jj_scanpos = xsp;
                if (jj_3R_133()) {
                    jj_scanpos = xsp;
                    if (jj_scan_token(92)) {
                        jj_scanpos = xsp;
                        if (jj_scan_token(105)) {
                            jj_scanpos = xsp;
                            if (jj_scan_token(75)) return true;
                        }
                    }
                }
            }
        }
        return false;
    }

    private boolean jj_3R_78() {
        if (jj_3R_37()) return true;
        return false;
    }

    private boolean jj_3R_31() {
        if (jj_scan_token(USE)) return true;
        Token xsp;
        xsp = jj_scanpos;
        if (jj_scan_token(105)) {
            jj_scanpos = xsp;
            if (jj_scan_token(108)) return true;
        }
        return false;
    }

    private boolean jj_3R_55() {
        Token xsp;
        xsp = jj_scanpos;
        if (jj_3R_78()) jj_scanpos = xsp;
        while (true) {
            xsp = jj_scanpos;
            if (jj_3R_79()) {
                jj_scanpos = xsp;
                break;
            }
        }
        return false;
    }

    private boolean jj_3R_135() {
        if (jj_scan_token(CLONE)) return true;
        if (jj_3R_54()) return true;
        return false;
    }

    private boolean jj_3R_130() {
        Token xsp;
        xsp = jj_scanpos;
        if (jj_3R_134()) {
            jj_scanpos = xsp;
            if (jj_3R_135()) return true;
        }
        return false;
    }

    private boolean jj_3R_134() {
        if (jj_scan_token(NEW)) return true;
        if (jj_3R_37()) return true;
        return false;
    }

    private boolean jj_3R_80() {
        if (jj_3R_94()) return true;
        return false;
    }

    private boolean jj_3R_94() {
        if (jj_scan_token(PHP_END)) return true;
        Token xsp;
        while (true) {
            xsp = jj_scanpos;
            if (jj_3R_111()) {
                jj_scanpos = xsp;
                break;
            }
        }
        xsp = jj_scanpos;
        if (jj_scan_token(1)) {
            jj_scanpos = xsp;
            if (jj_scan_token(0)) return true;
        }
        return false;
    }

    private boolean jj_3R_148() {
        if (jj_3R_37()) return true;
        return false;
    }

    private boolean jj_3R_147() {
        Token xsp;
        xsp = jj_scanpos;
        if (jj_3R_148()) jj_scanpos = xsp;
        while (true) {
            xsp = jj_scanpos;
            if (jj_3R_149()) {
                jj_scanpos = xsp;
                break;
            }
        }
        return false;
    }

    private boolean jj_3R_57() {
        Token xsp;
        xsp = jj_scanpos;
        if (jj_scan_token(95)) {
            jj_scanpos = xsp;
            if (jj_3R_80()) return true;
        }
        return false;
    }

    private boolean jj_3R_132() {
        if (jj_scan_token(158)) return true;
        if (jj_3R_147()) return true;
        if (jj_scan_token(159)) return true;
        return false;
    }

    private boolean jj_3R_146() {
        if (jj_scan_token(111)) return true;
        return false;
    }

    private boolean jj_3R_145() {
        if (jj_scan_token(158)) return true;
        return false;
    }

    private boolean jj_3R_144() {
        if (jj_scan_token(157)) return true;
        return false;
    }

    private boolean jj_3R_131() {
        if (jj_scan_token(ARRAY)) return true;
        if (jj_scan_token(115)) return true;
        return false;
    }

    private boolean jj_3R_63() {
        Token xsp;
        xsp = jj_scanpos;
        if (jj_scan_token(81)) {
            jj_scanpos = xsp;
            if (jj_scan_token(82)) return true;
        }
        return false;
    }

    private boolean jj_3R_33() {
        Token xsp;
        xsp = jj_scanpos;
        if (jj_3R_63()) jj_scanpos = xsp;
        if (jj_scan_token(CLASS)) return true;
        if (jj_scan_token(IDENTIFIER)) return true;
        return false;
    }

    private boolean jj_3R_128() {
        if (jj_3R_132()) return true;
        return false;
    }

    private boolean jj_3R_127() {
        if (jj_3R_131()) return true;
        return false;
    }

    private boolean jj_3R_126() {
        if (jj_3R_130()) return true;
        return false;
    }

    private boolean jj_3R_143() {
        if (jj_scan_token(156)) return true;
        return false;
    }

    private boolean jj_3R_125() {
        if (jj_scan_token(115)) return true;
        if (jj_3R_37()) return true;
        return false;
    }

    private boolean jj_3R_142() {
        if (jj_scan_token(115)) return true;
        return false;
    }

    private boolean jj_3R_141() {
        Token xsp;
        xsp = jj_scanpos;
        if (jj_3R_142()) {
            jj_scanpos = xsp;
            if (jj_3R_143()) {
                jj_scanpos = xsp;
                if (jj_3R_144()) {
                    jj_scanpos = xsp;
                    if (jj_3R_145()) {
                        jj_scanpos = xsp;
                        if (jj_3R_146()) return true;
                    }
                }
            }
        }
        return false;
    }

    private boolean jj_3R_124() {
        Token xsp;
        xsp = jj_scanpos;
        if (jj_scan_token(120)) jj_scanpos = xsp;
        if (jj_3R_129()) return true;
        return false;
    }

    private boolean jj_3_32() {
        Token xsp;
        xsp = jj_scanpos;
        if (jj_scan_token(120)) jj_scanpos = xsp;
        if (jj_3R_54()) return true;
        return false;
    }

    private boolean jj_3R_123() {
        Token xsp;
        xsp = jj_scanpos;
        if (jj_3_32()) {
            jj_scanpos = xsp;
            if (jj_3R_124()) {
                jj_scanpos = xsp;
                if (jj_3R_125()) {
                    jj_scanpos = xsp;
                    if (jj_3R_126()) {
                        jj_scanpos = xsp;
                        if (jj_3R_127()) {
                            jj_scanpos = xsp;
                            if (jj_3R_128()) {
                                jj_scanpos = xsp;
                                if (jj_scan_token(83)) return true;
                            }
                        }
                    }
                }
            }
        }
        return false;
    }

    private boolean jj_3R_56() {
        if (jj_scan_token(FQCN)) return true;
        return false;
    }

    private boolean jj_3_31() {
        if (jj_scan_token(INSTANCEOF)) return true;
        if (jj_3R_37()) return true;
        return false;
    }

    private boolean jj_3R_140() {
        Token xsp;
        xsp = jj_scanpos;
        if (jj_scan_token(154)) {
            jj_scanpos = xsp;
            if (jj_scan_token(155)) return true;
        }
        return false;
    }

    private boolean jj_3_2() {
        if (jj_scan_token(CLASS)) return true;
        return false;
    }

    private boolean jj_3R_26() {
        if (jj_scan_token(NAMESPACE)) return true;
        if (jj_3R_56()) return true;
        if (jj_3R_57()) return true;
        return false;
    }

    private boolean jj_3_1() {
        if (jj_3R_26()) return true;
        return false;
    }

    private boolean jj_3R_122() {
        if (jj_3R_123()) return true;
        Token xsp;
        while (true) {
            xsp = jj_scanpos;
            if (jj_3R_141()) {
                jj_scanpos = xsp;
                break;
            }
        }
        return false;
    }

    private boolean jj_3R_120() {
        if (jj_3R_122()) return true;
        Token xsp;
        xsp = jj_scanpos;
        if (jj_3_31()) jj_scanpos = xsp;
        return false;
    }

    private boolean jj_3_28() {
        Token xsp;
        xsp = jj_scanpos;
        if (jj_scan_token(146)) {
            jj_scanpos = xsp;
            if (jj_scan_token(147)) {
                jj_scanpos = xsp;
                if (jj_scan_token(148)) return true;
            }
        }
        if (jj_3R_52()) return true;
        return false;
    }

    private boolean jj_3R_116() {
        if (jj_3R_120()) return true;
        Token xsp;
        while (true) {
            xsp = jj_scanpos;
            if (jj_3R_140()) {
                jj_scanpos = xsp;
                break;
            }
        }
        return false;
    }

    private boolean jj_3_29() {
        Token xsp;
        xsp = jj_scanpos;
        if (jj_scan_token(149)) {
            jj_scanpos = xsp;
            if (jj_scan_token(150)) {
                jj_scanpos = xsp;
                if (jj_scan_token(151)) return true;
            }
        }
        if (jj_3R_53()) return true;
        return false;
    }

    private boolean jj_3_30() {
        if (jj_scan_token(115)) return true;
        if (jj_scan_token(VARTYPE)) return true;
        if (jj_scan_token(116)) return true;
        return false;
    }

    private boolean jj_3R_115() {
        Token xsp;
        xsp = jj_scanpos;
        if (jj_scan_token(154)) {
            jj_scanpos = xsp;
            if (jj_scan_token(155)) return true;
        }
        return false;
    }

    private boolean jj_3R_43() {
        if (jj_3R_76()) return true;
        return false;
    }

    private boolean jj_3R_110() {
        Token xsp;
        while (true) {
            xsp = jj_scanpos;
            if (jj_3R_115()) {
                jj_scanpos = xsp;
                break;
            }
        }
        if (jj_3R_116()) return true;
        return false;
    }

    private boolean jj_3_27() {
        Token xsp;
        xsp = jj_scanpos;
        if (jj_scan_token(144)) {
            jj_scanpos = xsp;
            if (jj_scan_token(145)) return true;
        }
        if (jj_3R_51()) return true;
        return false;
    }

    private boolean jj_3R_109() {
        Token xsp;
        xsp = jj_scanpos;
        if (jj_scan_token(114)) {
            jj_scanpos = xsp;
            if (jj_scan_token(147)) {
                jj_scanpos = xsp;
                if (jj_scan_token(152)) {
                    jj_scanpos = xsp;
                    if (jj_scan_token(153)) return true;
                }
            }
        }
        return false;
    }

    private boolean jj_3R_93() {
        Token xsp;
        while (true) {
            xsp = jj_scanpos;
            if (jj_3R_109()) {
                jj_scanpos = xsp;
                break;
            }
        }
        if (jj_3R_110()) return true;
        return false;
    }

    private boolean jj_3R_92() {
        if (jj_scan_token(115)) return true;
        if (jj_scan_token(VARTYPE)) return true;
        return false;
    }

    private boolean jj_3R_77() {
        Token xsp;
        xsp = jj_scanpos;
        if (jj_3R_92()) jj_scanpos = xsp;
        if (jj_3R_93()) return true;
        return false;
    }

    private boolean jj_3_25() {
        Token xsp;
        xsp = jj_scanpos;
        if (jj_scan_token(137)) {
            jj_scanpos = xsp;
            if (jj_scan_token(138)) {
                jj_scanpos = xsp;
                if (jj_scan_token(139)) {
                    jj_scanpos = xsp;
                    if (jj_scan_token(140)) return true;
                }
            }
        }
        if (jj_3R_49()) return true;
        return false;
    }

    private boolean jj_3_26() {
        Token xsp;
        xsp = jj_scanpos;
        if (jj_scan_token(99)) {
            jj_scanpos = xsp;
            if (jj_scan_token(141)) {
                jj_scanpos = xsp;
                if (jj_scan_token(142)) {
                    jj_scanpos = xsp;
                    if (jj_scan_token(143)) return true;
                }
            }
        }
        if (jj_3R_50()) return true;
        return false;
    }

    private boolean jj_3R_53() {
        if (jj_3R_77()) return true;
        Token xsp;
        xsp = jj_scanpos;
        if (jj_3_29()) jj_scanpos = xsp;
        return false;
    }

    private boolean jj_3R_42() {
        if (jj_3R_37()) return true;
        return false;
    }

    private boolean jj_3_24() {
        if (jj_scan_token(114)) return true;
        if (jj_3R_48()) return true;
        return false;
    }

    private boolean jj_3R_52() {
        if (jj_3R_53()) return true;
        Token xsp;
        xsp = jj_scanpos;
        if (jj_3_28()) jj_scanpos = xsp;
        return false;
    }

    private boolean jj_3_23() {
        if (jj_scan_token(136)) return true;
        if (jj_3R_47()) return true;
        return false;
    }

    private boolean jj_3R_51() {
        if (jj_3R_52()) return true;
        Token xsp;
        xsp = jj_scanpos;
        if (jj_3_27()) jj_scanpos = xsp;
        return false;
    }

    private boolean jj_3_22() {
        if (jj_scan_token(135)) return true;
        if (jj_3R_46()) return true;
        return false;
    }

    private boolean jj_3R_50() {
        if (jj_3R_51()) return true;
        Token xsp;
        xsp = jj_scanpos;
        if (jj_3_26()) jj_scanpos = xsp;
        return false;
    }

    private boolean jj_3_21() {
        if (jj_scan_token(134)) return true;
        if (jj_3R_45()) return true;
        return false;
    }

    private boolean jj_3_20() {
        if (jj_scan_token(133)) return true;
        if (jj_3R_44()) return true;
        return false;
    }

    private boolean jj_3R_49() {
        if (jj_3R_50()) return true;
        Token xsp;
        xsp = jj_scanpos;
        if (jj_3_25()) jj_scanpos = xsp;
        return false;
    }

    private boolean jj_3_14() {
        if (jj_scan_token(115)) return true;
        if (jj_3R_37()) return true;
        return false;
    }

    private boolean jj_3R_48() {
        if (jj_3R_49()) return true;
        Token xsp;
        xsp = jj_scanpos;
        if (jj_3_24()) jj_scanpos = xsp;
        return false;
    }

    private boolean jj_3_19() {
        if (jj_scan_token(132)) return true;
        if (jj_3R_37()) return true;
        return false;
    }

    private boolean jj_3R_47() {
        if (jj_3R_48()) return true;
        Token xsp;
        xsp = jj_scanpos;
        if (jj_3_23()) jj_scanpos = xsp;
        return false;
    }

    private boolean jj_3R_46() {
        if (jj_3R_47()) return true;
        Token xsp;
        xsp = jj_scanpos;
        if (jj_3_22()) jj_scanpos = xsp;
        return false;
    }

    private boolean jj_3_18() {
        if (jj_3R_41()) return true;
        Token xsp;
        xsp = jj_scanpos;
        if (jj_3R_42()) {
            jj_scanpos = xsp;
            if (jj_3R_43()) return true;
        }
        return false;
    }

    private boolean jj_3_13() {
        if (jj_scan_token(ELSE)) return true;
        if (jj_3R_36()) return true;
        return false;
    }

    private boolean jj_3R_45() {
        if (jj_3R_46()) return true;
        Token xsp;
        xsp = jj_scanpos;
        if (jj_3_21()) jj_scanpos = xsp;
        return false;
    }

    private boolean jj_3_17() {
        if (jj_scan_token(AND)) return true;
        if (jj_3R_40()) return true;
        return false;
    }

    private boolean jj_3_16() {
        if (jj_scan_token(XOR)) return true;
        if (jj_3R_39()) return true;
        return false;
    }

    private boolean jj_3R_44() {
        if (jj_3R_45()) return true;
        Token xsp;
        xsp = jj_scanpos;
        if (jj_3_20()) jj_scanpos = xsp;
        return false;
    }

    private boolean jj_3_15() {
        if (jj_scan_token(OR)) return true;
        if (jj_3R_38()) return true;
        return false;
    }

    private boolean jj_3R_91() {
        if (jj_3R_44()) return true;
        Token xsp;
        xsp = jj_scanpos;
        if (jj_3_19()) jj_scanpos = xsp;
        return false;
    }

    private boolean jj_3R_41() {
        Token xsp;
        xsp = jj_scanpos;
        if (jj_scan_token(113)) {
            jj_scanpos = xsp;
            if (jj_scan_token(121)) {
                jj_scanpos = xsp;
                if (jj_scan_token(122)) {
                    jj_scanpos = xsp;
                    if (jj_scan_token(123)) {
                        jj_scanpos = xsp;
                        if (jj_scan_token(124)) {
                            jj_scanpos = xsp;
                            if (jj_scan_token(125)) {
                                jj_scanpos = xsp;
                                if (jj_scan_token(126)) {
                                    jj_scanpos = xsp;
                                    if (jj_scan_token(127)) {
                                        jj_scanpos = xsp;
                                        if (jj_scan_token(128)) {
                                            jj_scanpos = xsp;
                                            if (jj_scan_token(129)) {
                                                jj_scanpos = xsp;
                                                if (jj_scan_token(130)) {
                                                    jj_scanpos = xsp;
                                                    if (jj_scan_token(131)) return true;
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
        return false;
    }

    private boolean jj_3R_75() {
        if (jj_3R_91()) return true;
        Token xsp;
        xsp = jj_scanpos;
        if (jj_3_18()) jj_scanpos = xsp;
        return false;
    }

    private boolean jj_3R_40() {
        if (jj_3R_75()) return true;
        Token xsp;
        xsp = jj_scanpos;
        if (jj_3_17()) jj_scanpos = xsp;
        return false;
    }

    private boolean jj_3R_39() {
        if (jj_3R_40()) return true;
        Token xsp;
        xsp = jj_scanpos;
        if (jj_3_16()) jj_scanpos = xsp;
        return false;
    }

    private boolean jj_3R_38() {
        if (jj_3R_39()) return true;
        Token xsp;
        xsp = jj_scanpos;
        if (jj_3_15()) jj_scanpos = xsp;
        return false;
    }

    private boolean jj_3R_37() {
        if (jj_3R_38()) return true;
        return false;
    }

    private boolean jj_3R_86() {
        Token xsp;
        xsp = jj_scanpos;
        if (jj_scan_token(54)) {
            jj_scanpos = xsp;
            if (jj_scan_token(55)) return true;
        }
        return false;
    }

    private boolean jj_3R_85() {
        Token xsp;
        xsp = jj_scanpos;
        if (jj_scan_token(120)) jj_scanpos = xsp;
        xsp = jj_scanpos;
        if (jj_scan_token(50)) {
            jj_scanpos = xsp;
            if (jj_scan_token(49)) {
                jj_scanpos = xsp;
                if (jj_scan_token(48)) {
                    jj_scanpos = xsp;
                    if (jj_scan_token(47)) return true;
                }
            }
        }
        return false;
    }

    private boolean jj_3_12() {
        if (jj_scan_token(ELSEIF)) return true;
        if (jj_scan_token(115)) return true;
        return false;
    }

    private boolean jj_3R_34() {
        if (jj_scan_token(INTERFACE)) return true;
        if (jj_scan_token(IDENTIFIER)) return true;
        return false;
    }

    private boolean jj_3R_76() {
        if (jj_scan_token(FUNCTION)) return true;
        return false;
    }

    private boolean jj_3R_30() {
        if (jj_scan_token(NAMESPACE)) return true;
        if (jj_scan_token(IDENTIFIER)) return true;
        return false;
    }

    private boolean jj_3R_103() {
        if (jj_scan_token(RETURN)) return true;
        return false;
    }

    private boolean jj_3R_102() {
        if (jj_scan_token(BREAK)) return true;
        return false;
    }

    private boolean jj_3R_84() {
        Token xsp;
        xsp = jj_scanpos;
        if (jj_3R_101()) {
            jj_scanpos = xsp;
            if (jj_3R_102()) {
                jj_scanpos = xsp;
                if (jj_3R_103()) return true;
            }
        }
        return false;
    }

    private boolean jj_3R_101() {
        if (jj_scan_token(CONTINUE)) return true;
        return false;
    }

    private boolean jj_3R_100() {
        if (jj_scan_token(FOREACH)) return true;
        return false;
    }

    private boolean jj_3R_99() {
        if (jj_scan_token(FOR)) return true;
        return false;
    }

    private boolean jj_3R_98() {
        if (jj_scan_token(DO)) return true;
        return false;
    }

    private boolean jj_3R_83() {
        Token xsp;
        xsp = jj_scanpos;
        if (jj_3R_97()) {
            jj_scanpos = xsp;
            if (jj_3R_98()) {
                jj_scanpos = xsp;
                if (jj_3R_99()) {
                    jj_scanpos = xsp;
                    if (jj_3R_100()) return true;
                }
            }
        }
        return false;
    }

    private boolean jj_3R_97() {
        if (jj_scan_token(WHILE)) return true;
        return false;
    }

    private boolean jj_3R_96() {
        if (jj_scan_token(SWITCH)) return true;
        return false;
    }

    private boolean jj_3R_82() {
        Token xsp;
        xsp = jj_scanpos;
        if (jj_3R_95()) {
            jj_scanpos = xsp;
            if (jj_3R_96()) return true;
        }
        return false;
    }

    private boolean jj_3R_95() {
        if (jj_scan_token(IF)) return true;
        return false;
    }

    private boolean jj_3R_35() {
        if (jj_3R_37()) return true;
        if (jj_3R_57()) return true;
        return false;
    }

    private boolean jj_3R_62() {
        if (jj_scan_token(DFLT)) return true;
        if (jj_scan_token(117)) return true;
        return false;
    }

    private boolean jj_3R_61() {
        if (jj_scan_token(CASE)) return true;
        if (jj_3R_37()) return true;
        return false;
    }

    private boolean jj_3R_32() {
        Token xsp;
        xsp = jj_scanpos;
        if (jj_3R_61()) {
            jj_scanpos = xsp;
            if (jj_3R_62()) return true;
        }
        return false;
    }

    private boolean jj_3R_87() {
        if (jj_scan_token(DEFINE)) return true;
        return false;
    }

    private boolean jj_3R_90() {
        if (jj_scan_token(TRY)) return true;
        return false;
    }

    private boolean jj_3R_89() {
        if (jj_scan_token(THROW)) return true;
        return false;
    }

    private boolean jj_3R_73() {
        if (jj_3R_90()) return true;
        return false;
    }

    private boolean jj_3R_74() {
        if (jj_3R_57()) return true;
        return false;
    }

    private boolean jj_3R_72() {
        if (jj_3R_89()) return true;
        return false;
    }

    private boolean jj_3R_71() {
        if (jj_3R_88()) return true;
        return false;
    }

    private boolean jj_3R_70() {
        if (jj_3R_87()) return true;
        return false;
    }

    private boolean jj_3R_69() {
        if (jj_3R_86()) return true;
        return false;
    }

    private boolean jj_3R_68() {
        if (jj_3R_85()) return true;
        return false;
    }

    private boolean jj_3R_67() {
        if (jj_3R_84()) return true;
        return false;
    }

    private boolean jj_3R_66() {
        if (jj_3R_83()) return true;
        return false;
    }

    private boolean jj_3R_65() {
        if (jj_3R_82()) return true;
        return false;
    }

    private boolean jj_3R_64() {
        if (jj_3R_81()) return true;
        return false;
    }

    private boolean jj_3_11() {
        if (jj_3R_35()) return true;
        return false;
    }

    private boolean jj_3_10() {
        if (jj_3R_34()) return true;
        return false;
    }

    private boolean jj_3_9() {
        if (jj_3R_33()) return true;
        return false;
    }

    private boolean jj_3_8() {
        if (jj_3R_32()) return true;
        return false;
    }

    private boolean jj_3_7() {
        if (jj_3R_31()) return true;
        return false;
    }

    private boolean jj_3R_36() {
        Token xsp;
        xsp = jj_scanpos;
        if (jj_3_6()) {
            jj_scanpos = xsp;
            if (jj_3_7()) {
                jj_scanpos = xsp;
                if (jj_3_8()) {
                    jj_scanpos = xsp;
                    if (jj_3_9()) {
                        jj_scanpos = xsp;
                        if (jj_3_10()) {
                            jj_scanpos = xsp;
                            if (jj_3_11()) {
                                jj_scanpos = xsp;
                                if (jj_3R_64()) {
                                    jj_scanpos = xsp;
                                    if (jj_3R_65()) {
                                        jj_scanpos = xsp;
                                        if (jj_3R_66()) {
                                            jj_scanpos = xsp;
                                            if (jj_3R_67()) {
                                                jj_scanpos = xsp;
                                                if (jj_3R_68()) {
                                                    jj_scanpos = xsp;
                                                    if (jj_3R_69()) {
                                                        jj_scanpos = xsp;
                                                        if (jj_3R_70()) {
                                                            jj_scanpos = xsp;
                                                            if (jj_3R_71()) {
                                                                jj_scanpos = xsp;
                                                                if (jj_3R_72()) {
                                                                    jj_scanpos = xsp;
                                                                    if (jj_3R_73()) {
                                                                        jj_scanpos = xsp;
                                                                        if (jj_3R_74()) return true;
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
        return false;
    }

    private boolean jj_3_6() {
        if (jj_3R_30()) return true;
        return false;
    }

    private boolean jj_3_5() {
        if (jj_scan_token(110)) return true;
        if (jj_3R_29()) return true;
        return false;
    }

    private boolean jj_3R_81() {
        if (jj_scan_token(111)) return true;
        return false;
    }

    private boolean jj_3R_60() {
        Token xsp;
        xsp = jj_scanpos;
        if (jj_scan_token(105)) {
            jj_scanpos = xsp;
            if (jj_scan_token(90)) return true;
        }
        return false;
    }

    private boolean jj_3R_29() {
        Token xsp;
        xsp = jj_scanpos;
        if (jj_3R_60()) jj_scanpos = xsp;
        xsp = jj_scanpos;
        if (jj_scan_token(114)) jj_scanpos = xsp;
        if (jj_3R_54()) return true;
        return false;
    }

    private boolean jj_3R_54() {
        if (jj_scan_token(DOLLAR)) return true;
        Token xsp;
        while (true) {
            xsp = jj_scanpos;
            if (jj_scan_token(103)) {
                jj_scanpos = xsp;
                break;
            }
        }
        if (jj_scan_token(VAR_NAME)) return true;
        return false;
    }

    private boolean jj_3R_59() {
        Token xsp;
        xsp = jj_scanpos;
        if (jj_scan_token(78)) {
            jj_scanpos = xsp;
            if (jj_scan_token(79)) {
                jj_scanpos = xsp;
                if (jj_scan_token(80)) return true;
            }
        }
        return false;
    }

    private boolean jj_3R_58() {
        if (jj_3R_59()) return true;
        return false;
    }

    private boolean jj_3R_113() {
        if (jj_3R_59()) return true;
        return false;
    }

    private boolean jj_3R_133() {
        if (jj_3R_136()) return true;
        return false;
    }

    private boolean jj_3R_121() {
        if (jj_3R_59()) return true;
        return false;
    }

    private boolean jj_3R_118() {
        Token xsp;
        xsp = jj_scanpos;
        if (jj_scan_token(82)) {
            jj_scanpos = xsp;
            if (jj_3R_121()) {
                jj_scanpos = xsp;
                if (jj_scan_token(83)) return true;
            }
        }
        return false;
    }

    private boolean jj_3R_117() {
        if (jj_scan_token(SLASH_STAR_COMMENT)) return true;
        return false;
    }

    private boolean jj_3R_28() {
        if (jj_3R_59()) return true;
        return false;
    }

    private boolean jj_3R_27() {
        Token xsp;
        xsp = jj_scanpos;
        if (jj_scan_token(11)) {
            jj_scanpos = xsp;
            if (jj_scan_token(82)) {
                jj_scanpos = xsp;
                if (jj_3R_58()) {
                    jj_scanpos = xsp;
                    if (jj_scan_token(83)) return true;
                }
            }
        }
        return false;
    }

    private boolean jj_3R_112() {
        Token xsp;
        xsp = jj_scanpos;
        if (jj_3R_117()) jj_scanpos = xsp;
        while (true) {
            xsp = jj_scanpos;
            if (jj_3R_118()) {
                jj_scanpos = xsp;
                break;
            }
        }
        if (jj_scan_token(FUNCTION)) return true;
        return false;
    }

    private boolean jj_3_3() {
        Token xsp;
        while (true) {
            xsp = jj_scanpos;
            if (jj_3R_27()) {
                jj_scanpos = xsp;
                break;
            }
        }
        if (jj_scan_token(FUNCTION)) return true;
        return false;
    }

    private boolean jj_3_4() {
        Token xsp;
        xsp = jj_scanpos;
        if (jj_3R_28()) jj_scanpos = xsp;
        if (jj_scan_token(CONST)) return true;
        return false;
    }

    private boolean jj_3R_119() {
        if (jj_3R_59()) return true;
        return false;
    }

    private boolean jj_3R_153() {
        if (jj_scan_token(DSL_COMPLEX_VAR_START)) return true;
        return false;
    }

    private boolean jj_3R_152() {
        if (jj_scan_token(DSL_SIMPLE_VAR_START)) return true;
        return false;
    }

    private boolean jj_3R_151() {
        Token xsp;
        xsp = jj_scanpos;
        if (jj_3R_152()) {
            jj_scanpos = xsp;
            if (jj_3R_153()) return true;
        }
        return false;
    }

    private boolean jj_3R_108() {
        if (jj_scan_token(ABSTRACT)) return true;
        return false;
    }

    private boolean jj_3R_107() {
        if (jj_scan_token(GLOBAL)) return true;
        return false;
    }

    private boolean jj_3R_114() {
        Token xsp;
        xsp = jj_scanpos;
        if (jj_scan_token(77)) {
            jj_scanpos = xsp;
            if (jj_3R_119()) {
                jj_scanpos = xsp;
                if (jj_scan_token(83)) return true;
            }
        }
        return false;
    }

    private boolean jj_3R_149() {
        if (jj_scan_token(110)) return true;
        return false;
    }

    private boolean jj_3R_106() {
        Token xsp;
        while (true) {
            xsp = jj_scanpos;
            if (jj_3R_114()) {
                jj_scanpos = xsp;
                break;
            }
        }
        if (jj_scan_token(DOLLAR)) return true;
        return false;
    }

    private boolean jj_3R_105() {
        Token xsp;
        xsp = jj_scanpos;
        if (jj_3R_113()) jj_scanpos = xsp;
        if (jj_scan_token(CONST)) return true;
        return false;
    }

    private boolean jj_3R_150() {
        Token xsp;
        while (true) {
            xsp = jj_scanpos;
            if (jj_3R_151()) {
                jj_scanpos = xsp;
                break;
            }
        }
        if (jj_scan_token(DOUBLE_STRING_LITERAL_END)) return true;
        return false;
    }

    private boolean jj_3R_104() {
        if (jj_3R_112()) return true;
        return false;
    }

    /**
     * Generated Token Manager.
     */
    public PhpParserTokenManager token_source;
    SimpleCharStream jj_input_stream;
    /**
     * Current token.
     */
    public Token token;
    /**
     * Next token.
     */
    public Token jj_nt;
    private int jj_ntk;
    private Token jj_scanpos, jj_lastpos;
    private int jj_la;
    private int jj_gen;
    final private int[] jj_la1 = new int[106];
    static private int[] jj_la1_0;
    static private int[] jj_la1_1;
    static private int[] jj_la1_2;
    static private int[] jj_la1_3;
    static private int[] jj_la1_4;

    static {
        jj_la1_init_0();
        jj_la1_init_1();
        jj_la1_init_2();
        jj_la1_init_3();
        jj_la1_init_4();
    }

    private static void jj_la1_init_0() {
        jj_la1_0 = new int[]{0x800, 0x800, 0x800, 0x800, 0x1, 0x3, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x18, 0x18, 0x3, 0x0, 0x0, 0x800, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x800, 0x800, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1d1800, 0x800, 0x0, 0x0, 0x0, 0x1d1000, 0x1d1000, 0x1d1000, 0x1d1000, 0x0, 0x0, 0x0, 0x1000, 0x1000, 0x1d1000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1d1000, 0x0, 0x1d1000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1d1000, 0x0, 0x0, 0x0, 0x1d1000, 0x0, 0x1d1000, 0x0, 0x0, 0x1d1000, 0x0, 0x1d1000, 0x0, 0x1d1000, 0x1c0000, 0x18000000, 0x0, 0x18000000, 0x1c000000,};
    }

    private static void jj_la1_init_1() {
        jj_la1_1 = new int[]{0x0, 0x0, 0x100000, 0x100000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xffff8000, 0xf9e78000, 0x0, 0x6000000, 0x1000000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xe0000000, 0x0, 0x0, 0x0, 0x18000000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x78000, 0x0, 0xc00000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xa, 0x0, 0x0,};
    }

    private static void jj_la1_init_2() {
        jj_la1_2 = new int[]{0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x60000, 0x60000, 0x1000, 0x0, 0x200000, 0xa0000000, 0x0, 0x0, 0x0, 0x0, 0x1, 0x424fe400, 0x1c000, 0x9e000, 0x9e000, 0x0, 0x0, 0x0, 0x0, 0x1c000, 0x80000, 0x0, 0x44000000, 0x420be000, 0x0, 0xdc000, 0xdc000, 0x0, 0x44000000, 0x1c000, 0x0, 0x4000000, 0x4000000, 0x0, 0x0, 0xfedfec0e, 0xe24fe40e, 0x0, 0x0, 0x8, 0x5c880800, 0x5c880800, 0x5c880800, 0x5c880800, 0x0, 0x0, 0x2, 0x0, 0x0, 0x5c880800, 0x4, 0x0, 0x44000000, 0x0, 0x1000, 0x40424400, 0x4000, 0x20000, 0x0, 0x44000000, 0x0, 0x0, 0x40420400, 0x0, 0x0, 0x5c880800, 0x0, 0x5c880c00, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x5c880800, 0x0, 0x0, 0x0, 0x1c880800, 0x0, 0x5c880800, 0x0, 0x0, 0x5c880800, 0x8800000, 0x5c880800, 0x0, 0x10000800, 0x0, 0x0, 0x0, 0x0, 0x0,};
    }

    private static void jj_la1_init_3() {
        jj_la1_3 = new int[]{0x0, 0x0, 0x0, 0x0, 0x2000, 0x0, 0x0, 0x0, 0x0, 0x4000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1200, 0x0, 0x0, 0x0, 0x0, 0x0, 0x20000, 0x4000, 0x20000, 0x4000, 0x0, 0x0, 0x40000, 0x40200, 0x0, 0x0, 0x0, 0x0, 0x40000, 0x40200, 0x0, 0x80, 0x200, 0x200, 0x40000, 0x20000, 0x10c8205, 0x1008005, 0x2, 0x0, 0x0, 0x10c0200, 0x10c0200, 0x10c0200, 0x10c0200, 0x40000, 0x400000, 0x0, 0x0, 0x0, 0x10c0200, 0x0, 0x800000, 0x40200, 0x4000, 0x0, 0x0, 0x0, 0x0, 0x40000, 0x40200, 0x8000, 0x4000, 0x0, 0x1000000, 0x0, 0x10c0200, 0x0, 0x10c0200, 0xfe020000, 0x0, 0x8, 0x0, 0x0, 0x0, 0x40000, 0x40000, 0x0, 0x0, 0x0, 0x0, 0x88000, 0x10c0200, 0x88000, 0x1000000, 0x1000000, 0x1080200, 0x400000, 0x10c0200, 0x4000, 0x400000, 0x10c0200, 0x0, 0x10c0200, 0x4000, 0x200, 0x0, 0x0, 0x0, 0x0, 0x0,};
    }

    private static void jj_la1_init_4() {
        jj_la1_4 = new int[]{0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x4f080000, 0x0, 0x0, 0x0, 0x0, 0x4f080000, 0x4f080000, 0x4f080000, 0x4f080000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x4f080000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x4f080000, 0x0, 0x4f080000, 0xf, 0x1e00, 0xe000, 0x30000, 0x1c0000, 0xe00000, 0x3080000, 0x3080000, 0xc000000, 0xc000000, 0xc000000, 0xc000000, 0x70000000, 0x4f080000, 0x70000000, 0x0, 0x0, 0x40000000, 0x0, 0x4f080000, 0x0, 0x0, 0x4f080000, 0x0, 0x4f080000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,};
    }

    final private JJCalls[] jj_2_rtns = new JJCalls[34];
    private boolean jj_rescan = false;
    private int jj_gc = 0;

    /**
     * Constructor with InputStream.
     */
    public PhpParser(java.io.InputStream stream) {
        this(stream, null);
    }

    /**
     * Constructor with InputStream and supplied encoding
     */
    public PhpParser(java.io.InputStream stream, String encoding) {
        try {
            jj_input_stream = new SimpleCharStream(stream, encoding, 1, 1);
        } catch (java.io.UnsupportedEncodingException e) {
            throw new RuntimeException(e);
        }
        token_source = new PhpParserTokenManager(jj_input_stream);
        token = new Token();
        jj_ntk = -1;
        jj_gen = 0;
        for (int i = 0; i < 106; i++) jj_la1[i] = -1;
        for (int i = 0; i < jj_2_rtns.length; i++) jj_2_rtns[i] = new JJCalls();
    }

    /**
     * Reinitialise.
     */
    public void ReInit(java.io.InputStream stream) {
        ReInit(stream, null);
    }

    /**
     * Reinitialise.
     */
    public void ReInit(java.io.InputStream stream, String encoding) {
        try {
            jj_input_stream.ReInit(stream, encoding, 1, 1);
        } catch (java.io.UnsupportedEncodingException e) {
            throw new RuntimeException(e);
        }
        token_source.ReInit(jj_input_stream);
        token = new Token();
        jj_ntk = -1;
        jj_gen = 0;
        for (int i = 0; i < 106; i++) jj_la1[i] = -1;
        for (int i = 0; i < jj_2_rtns.length; i++) jj_2_rtns[i] = new JJCalls();
    }

    /**
     * Constructor.
     */
    public PhpParser(java.io.Reader stream) {
        jj_input_stream = new SimpleCharStream(stream, 1, 1);
        token_source = new PhpParserTokenManager(jj_input_stream);
        token = new Token();
        jj_ntk = -1;
        jj_gen = 0;
        for (int i = 0; i < 106; i++) jj_la1[i] = -1;
        for (int i = 0; i < jj_2_rtns.length; i++) jj_2_rtns[i] = new JJCalls();
    }

    /**
     * Reinitialise.
     */
    public void ReInit(java.io.Reader stream) {
        jj_input_stream.ReInit(stream, 1, 1);
        token_source.ReInit(jj_input_stream);
        token = new Token();
        jj_ntk = -1;
        jj_gen = 0;
        for (int i = 0; i < 106; i++) jj_la1[i] = -1;
        for (int i = 0; i < jj_2_rtns.length; i++) jj_2_rtns[i] = new JJCalls();
    }

    /**
     * Constructor with generated Token Manager.
     */
    public PhpParser(PhpParserTokenManager tm) {
        token_source = tm;
        token = new Token();
        jj_ntk = -1;
        jj_gen = 0;
        for (int i = 0; i < 106; i++) jj_la1[i] = -1;
        for (int i = 0; i < jj_2_rtns.length; i++) jj_2_rtns[i] = new JJCalls();
    }

    /**
     * Reinitialise.
     */
    public void ReInit(PhpParserTokenManager tm) {
        token_source = tm;
        token = new Token();
        jj_ntk = -1;
        jj_gen = 0;
        for (int i = 0; i < 106; i++) jj_la1[i] = -1;
        for (int i = 0; i < jj_2_rtns.length; i++) jj_2_rtns[i] = new JJCalls();
    }

    private Token jj_consume_token(int kind) throws ParseException {
        Token oldToken;
        if ((oldToken = token).next != null) token = token.next;
        else token = token.next = token_source.getNextToken();
        jj_ntk = -1;
        if (token.kind == kind) {
            jj_gen++;
            if (++jj_gc > 100) {
                jj_gc = 0;
                for (int i = 0; i < jj_2_rtns.length; i++) {
                    JJCalls c = jj_2_rtns[i];
                    while (c != null) {
                        if (c.gen < jj_gen) c.first = null;
                        c = c.next;
                    }
                }
            }
            return token;
        }
        token = oldToken;
        jj_kind = kind;
        throw generateParseException();
    }

    @SuppressWarnings("serial")
    static private final class LookaheadSuccess extends java.lang.Error {

    }

    final private LookaheadSuccess jj_ls = new LookaheadSuccess();

    private boolean jj_scan_token(int kind) {
        if (jj_scanpos == jj_lastpos) {
            jj_la--;
            if (jj_scanpos.next == null) {
                jj_lastpos = jj_scanpos = jj_scanpos.next = token_source.getNextToken();
            } else {
                jj_lastpos = jj_scanpos = jj_scanpos.next;
            }
        } else {
            jj_scanpos = jj_scanpos.next;
        }
        if (jj_rescan) {
            int i = 0;
            Token tok = token;
            while (tok != null && tok != jj_scanpos) {
                i++;
                tok = tok.next;
            }
            if (tok != null) jj_add_error_token(kind, i);
        }
        if (jj_scanpos.kind != kind) return true;
        if (jj_la == 0 && jj_scanpos == jj_lastpos) throw jj_ls;
        return false;
    }


    /**
     * Get the next Token.
     */
    final public Token getNextToken() {
        if (token.next != null) token = token.next;
        else token = token.next = token_source.getNextToken();
        jj_ntk = -1;
        jj_gen++;
        return token;
    }

    /**
     * Get the specific Token.
     */
    final public Token getToken(int index) {
        Token t = token;
        for (int i = 0; i < index; i++) {
            if (t.next != null) t = t.next;
            else t = t.next = token_source.getNextToken();
        }
        return t;
    }

    private int jj_ntk_f() {
        if ((jj_nt = token.next) == null)
            return (jj_ntk = (token.next = token_source.getNextToken()).kind);
        else
            return (jj_ntk = jj_nt.kind);
    }

    private java.util.List<int[]> jj_expentries = new java.util.ArrayList<int[]>();
    private int[] jj_expentry;
    private int jj_kind = -1;
    private int[] jj_lasttokens = new int[100];
    private int jj_endpos;

    private void jj_add_error_token(int kind, int pos) {
        if (pos >= 100) return;
        if (pos == jj_endpos + 1) {
            jj_lasttokens[jj_endpos++] = kind;
        } else if (jj_endpos != 0) {
            jj_expentry = new int[jj_endpos];
            for (int i = 0; i < jj_endpos; i++) {
                jj_expentry[i] = jj_lasttokens[i];
            }
            jj_entries_loop:
            for (java.util.Iterator<?> it = jj_expentries.iterator(); it.hasNext(); ) {
                int[] oldentry = (int[]) (it.next());
                if (oldentry.length == jj_expentry.length) {
                    for (int i = 0; i < jj_expentry.length; i++) {
                        if (oldentry[i] != jj_expentry[i]) {
                            continue jj_entries_loop;
                        }
                    }
                    jj_expentries.add(jj_expentry);
                    break jj_entries_loop;
                }
            }
            if (pos != 0) jj_lasttokens[(jj_endpos = pos) - 1] = kind;
        }
    }

    /**
     * Generate ParseException.
     */
    public ParseException generateParseException() {
        jj_expentries.clear();
        boolean[] la1tokens = new boolean[160];
        if (jj_kind >= 0) {
            la1tokens[jj_kind] = true;
            jj_kind = -1;
        }
        for (int i = 0; i < 106; i++) {
            if (jj_la1[i] == jj_gen) {
                for (int j = 0; j < 32; j++) {
                    if ((jj_la1_0[i] & (1 << j)) != 0) {
                        la1tokens[j] = true;
                    }
                    if ((jj_la1_1[i] & (1 << j)) != 0) {
                        la1tokens[32 + j] = true;
                    }
                    if ((jj_la1_2[i] & (1 << j)) != 0) {
                        la1tokens[64 + j] = true;
                    }
                    if ((jj_la1_3[i] & (1 << j)) != 0) {
                        la1tokens[96 + j] = true;
                    }
                    if ((jj_la1_4[i] & (1 << j)) != 0) {
                        la1tokens[128 + j] = true;
                    }
                }
            }
        }
        for (int i = 0; i < 160; i++) {
            if (la1tokens[i]) {
                jj_expentry = new int[1];
                jj_expentry[0] = i;
                jj_expentries.add(jj_expentry);
            }
        }
        jj_endpos = 0;
        jj_rescan_token();
        jj_add_error_token(0, 0);
        int[][] exptokseq = new int[jj_expentries.size()][];
        for (int i = 0; i < jj_expentries.size(); i++) {
            exptokseq[i] = jj_expentries.get(i);
        }
        return new ParseException(token, exptokseq, tokenImage);
    }

    /**
     * Enable tracing.
     */
    final public void enable_tracing() {
    }

    /**
     * Disable tracing.
     */
    final public void disable_tracing() {
    }

    private void jj_rescan_token() {
        jj_rescan = true;
        for (int i = 0; i < 34; i++) {
            try {
                JJCalls p = jj_2_rtns[i];
                do {
                    if (p.gen > jj_gen) {
                        jj_la = p.arg;
                        jj_lastpos = jj_scanpos = p.first;
                        switch (i) {
                            case 0:
                                jj_3_1();
                                break;
                            case 1:
                                jj_3_2();
                                break;
                            case 2:
                                jj_3_3();
                                break;
                            case 3:
                                jj_3_4();
                                break;
                            case 4:
                                jj_3_5();
                                break;
                            case 5:
                                jj_3_6();
                                break;
                            case 6:
                                jj_3_7();
                                break;
                            case 7:
                                jj_3_8();
                                break;
                            case 8:
                                jj_3_9();
                                break;
                            case 9:
                                jj_3_10();
                                break;
                            case 10:
                                jj_3_11();
                                break;
                            case 11:
                                jj_3_12();
                                break;
                            case 12:
                                jj_3_13();
                                break;
                            case 13:
                                jj_3_14();
                                break;
                            case 14:
                                jj_3_15();
                                break;
                            case 15:
                                jj_3_16();
                                break;
                            case 16:
                                jj_3_17();
                                break;
                            case 17:
                                jj_3_18();
                                break;
                            case 18:
                                jj_3_19();
                                break;
                            case 19:
                                jj_3_20();
                                break;
                            case 20:
                                jj_3_21();
                                break;
                            case 21:
                                jj_3_22();
                                break;
                            case 22:
                                jj_3_23();
                                break;
                            case 23:
                                jj_3_24();
                                break;
                            case 24:
                                jj_3_25();
                                break;
                            case 25:
                                jj_3_26();
                                break;
                            case 26:
                                jj_3_27();
                                break;
                            case 27:
                                jj_3_28();
                                break;
                            case 28:
                                jj_3_29();
                                break;
                            case 29:
                                jj_3_30();
                                break;
                            case 30:
                                jj_3_31();
                                break;
                            case 31:
                                jj_3_32();
                                break;
                            case 32:
                                jj_3_33();
                                break;
                            case 33:
                                jj_3_34();
                                break;
                        }
                    }
                    p = p.next;
                } while (p != null);
            } catch (LookaheadSuccess ls) {
            }
        }
        jj_rescan = false;
    }

    private void jj_save(int index, int xla) {
        JJCalls p = jj_2_rtns[index];
        while (p.gen > jj_gen) {
            if (p.next == null) {
                p = p.next = new JJCalls();
                break;
            }
            p = p.next;
        }
        p.gen = jj_gen + xla - jj_la;
        p.first = token;
        p.arg = xla;
    }

    static final class JJCalls {

        int gen;
        Token first;
        int arg;
        JJCalls next;
    }

}
